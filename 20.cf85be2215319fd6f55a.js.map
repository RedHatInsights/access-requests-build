{"version":3,"sources":["webpack://@redhat-cloud-services/access-requests-frontend/./src/Routes/AccessRequestDetailsPage.js"],"names":["requestId","isInternal","React","request","setRequest","dispatch","useDispatch","fetch","API_BASE","then","res","json","errors","Error","details","map","e","detail","join","err","addNotification","variant","title","description","message","type","openModal","setOpenModal","onModalClose","actions","getInternalActions","status","isDropdownOpen","setIsDropdownOpen","requestDisplayProps","PageSection","Breadcrumb","BreadcrumbItem","render","Link","to","Flex","direction","default","md","FlexItem","grow","Title","headingLevel","size","className","alignSelf","Dropdown","position","toggle","KebabToggle","onToggle","id","isOpen","isPlain","dropdownItems","items","onClick","DropdownItem","key","component","isDisabled","disable","spaceItems","xl","lg","flex","Card","ouiaId","style","height","CardTitle","CardBody","Label","getLabelProps","capitalize","prop","replace","Spinner","roles","onClose"],"mappings":"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","file":"20.cf85be2215319fd6f55a.js","sourcesContent":["import React from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  PageSection,\n  Title,\n  Card,\n  CardTitle,\n  CardBody,\n  Flex,\n  FlexItem,\n  Spinner,\n  Button,\n  Label,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport { capitalize } from '@patternfly/react-core/dist/esm/helpers/util';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport MUARolesTable from '../Components/MUARolesTable';\nimport CancelRequestModal from '../Components/CancelRequestModal';\nimport EditRequestModal from '../Components/EditRequestModal';\nimport { getLabelProps } from '../Helpers/getLabelProps';\nimport { getInternalActions, StatusLabel } from '../Helpers/getActions';\n\nconst AccessRequestDetailsPage = ({ requestId, isInternal }) => {\n  const [request, setRequest] = React.useState();\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    fetch(`${API_BASE}/cross-account-requests/${requestId}/`)\n      .then(res => res.json())\n      .then(res => {\n        if (res.errors) {\n          throw Error(details.errors.map(e => e.detail).join('\\n'));\n        }\n        setRequest(res);\n      })\n      .catch(err => {\n        dispatch(addNotification({\n          variant: 'danger',\n          title: 'Could not load access request',\n          description: err.message,\n        }));\n      });\n  }, []);\n\n  // Modal actions\n  const [openModal, setOpenModal] = React.useState({ type: null });\n  const onModalClose = () => setOpenModal({ type: null });\n  const actions = getInternalActions(request && request.status, requestId, setOpenModal);\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n \n  const requestDisplayProps = [\n    ...(isInternal\n      ? ['request_id', 'target_account']\n      : ['first_name', 'last_name']\n    ),\n    'start_date',\n    'end_date',\n    'created',\n  ];\n  return (\n    <React.Fragment>\n      <PageSection variant=\"light\">\n        <Breadcrumb>\n          <BreadcrumbItem render={() => <Link to=\"/\">{!isInternal && 'Red Hat '}Access Requests</Link>} />\n          <BreadcrumbItem>{requestId}</BreadcrumbItem>\n        </Breadcrumb>\n        <Flex direction={{ default: \"column\", md: \"row\" }}>\n          <FlexItem grow={{ default: \"grow\" }}>\n            <Title headingLevel=\"h1\" size=\"2xl\" className=\"pf-u-pt-md\">\n              {requestId}\n            </Title>\n          </FlexItem>\n          {isInternal &&\n            <FlexItem alignSelf={{ default: \"alignRight\" }}>\n              <Dropdown\n                position=\"right\"\n                toggle={<KebabToggle onToggle={() => setIsDropdownOpen(!isDropdownOpen)} id=\"actions-toggle\" />}\n                isOpen={isDropdownOpen}\n                isPlain\n                dropdownItems={actions.items.map(({ title, onClick }) =>\n                  <DropdownItem key={title} component=\"button\" onClick={onClick}>\n                    {title}\n                  </DropdownItem>\n                )}\n                isDisabled={actions.disable}\n              /> \n            </FlexItem>\n          }\n        </Flex>\n      </PageSection>\n      <PageSection>\n        <Flex spaceItems={{ xl: 'spaceItemsLg' }} direction={{ default: 'column', lg: 'row' }}>\n          <FlexItem flex={{ default: 'flex_1' }} alignSelf={{ default: 'alignSelfStretch' }}>\n            <Card ouiaId=\"request-details\" style={{ height: '100%' }}>\n              <CardTitle>\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  Request details\n                </Title>\n              </CardTitle>\n              <CardBody>\n                {!request ? <Spinner size=\"xl\" /> :\n                  <React.Fragment>\n                    <div className=\"pf-u-pb-md\">\n                      {isInternal\n                        ?\n                          <div>\n                            <label><b>Request status</b></label>\n                            <br />\n                            <Label className=\"pf-u-mt-sm\" {...getLabelProps(request.status)}>\n                              {capitalize(request.status)}\n                            </Label>\n                          </div>\n                        :\n                          <React.Fragment>\n                            <label><b>Request decision</b></label>\n                            <br />\n                            <StatusLabel requestId={requestId} status={request.status} />\n                          </React.Fragment>\n                      }\n                    </div>\n                    {requestDisplayProps.map(prop =>\n                      <div className=\"pf-u-pb-md\">\n                        <label><b>{capitalize(prop.replace(/_/g, ' ').replace('id', 'ID'))}</b></label>\n                        <br />\n                        <div>{request[prop]}</div>\n                      </div>\n                    )}\n                  </React.Fragment>\n                }\n              </CardBody>\n            </Card>\n          </FlexItem>\n          <FlexItem flex={{ default: 'flex_3' }} grow={{ default: 'grow' }} alignSelf={{ default: 'alignSelfStretch' }}>\n            <Card ouiaId=\"request-roles\" style={{ height: '100%' }}>\n              <CardTitle>\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  Roles requested\n                </Title>\n              </CardTitle>\n              <CardBody>\n                {!request ? <Spinner size=\"xl\" /> :\n                  <MUARolesTable roles={request.roles} />\n                }\n              </CardBody>\n            </Card>\n          </FlexItem>\n        </Flex>\n      </PageSection>\n      {openModal.type === 'cancel' &&\n        <CancelRequestModal\n          requestId={requestId}\n          onClose={onModalClose}\n        />}\n      {openModal.type === 'edit' &&\n        <EditRequestModal\n          variant=\"edit\"\n          requestId={requestId}\n          onClose={onModalClose}\n        />}\n    </React.Fragment>\n  );\n}\n\nexport default AccessRequestDetailsPage;\n\n"],"sourceRoot":""}