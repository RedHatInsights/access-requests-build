{"version":3,"file":"js/434.e872c3e14afdc0b0fe43.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./src/Components/ErrorReducerCatcher.js","webpack:///./src/Redux/action-types.js","webpack:///./src/Components/AccessRequestsTable.js","webpack:///./src/Routes/AccessRequestsPage.js","webpack:///./src/Redux/error-reducer.js","webpack:///./src/store.js","webpack:///./node_modules/react-redux/es/hooks/useDispatch.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","import { ADD_NOTIFICATION, REMOVE_NOTIFICATION, CLEAR_NOTIFICATIONS } from './action-types';\nexport var addNotification = function addNotification(notification) {\n  return {\n    type: ADD_NOTIFICATION,\n    payload: notification\n  };\n};\nexport var removeNotification = function removeNotification(index) {\n  return {\n    type: REMOVE_NOTIFICATION,\n    payload: index\n  };\n};\nexport var clearNotifications = function clearNotifications() {\n  return {\n    type: CLEAR_NOTIFICATIONS\n  };\n};\nexport default {\n  addNotification: addNotification,\n  removeNotification: removeNotification,\n  clearNotifications: clearNotifications\n};","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized/NotAuthorized';\nimport { useLocation } from 'react-router-dom';\nimport { API_ERROR } from '../Redux/action-types';\n\nconst errorStates = {\n  403: NotAuthorized,\n};\n\nconst ErroReducerCatcher = ({ children }) => {\n  const errorCode = useSelector(({ errorReducer: { errorCode } }) => errorCode);\n  const { pathname } = useLocation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (errorCode) {\n      dispatch({ type: API_ERROR, payload: undefined });\n    }\n  }, [pathname]);\n\n  if (errorCode) {\n    const State = errorStates[errorCode];\n    const name = 'Access Requests';\n    return <State serviceName={name} />;\n  }\n\n  return children;\n};\n\nErroReducerCatcher.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ErroReducerCatcher;\n","export const API_ERROR = 'API_ERROR';\n","import React from 'react';\nimport {\n  Toolbar,\n  ToolbarItem,\n  ToolbarContent,\n  Button,\n  InputGroup,\n  TextInput,\n  Pagination,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  Select,\n  SelectOption,\n  ChipGroup,\n  Chip,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\nimport CancelRequestModal from './CancelRequestModal';\nimport EditRequestModal from './EditRequestModal';\nimport { capitalize } from '@patternfly/react-core/dist/esm/helpers/util';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport FilterIcon from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { getInternalActions, StatusLabel } from '../Helpers/getActions';\nimport PropTypes from 'prop-types';\nimport apiInstance from '../Helpers/apiInstance';\n\nfunction uncapitalize(input) {\n  return input[0].toLowerCase() + input.substring(1);\n}\n\n// https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n\n  React.useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value]\n  );\n\n  return debouncedValue;\n}\n\nconst statuses = ['pending', 'approved', 'denied', 'cancelled', 'expired'];\n\nconst AccessRequestsTable = ({ isInternal }) => {\n  const columns = isInternal\n    ? [\n        'Request ID',\n        'Account number',\n        'Start date',\n        'End date',\n        'Created',\n        'Status',\n      ]\n    : [\n        'Request ID',\n        'First name',\n        'Last name',\n        'Start date',\n        'End date',\n        'Created',\n        'Decision',\n      ];\n\n  // Sorting\n  const [activeSortIndex, setActiveSortIndex] = React.useState(\n    isInternal ? 4 : 5\n  );\n  const [activeSortDirection, setActiveSortDirection] = React.useState('desc');\n  const onSort = (_ev, index, direction) => {\n    setActiveSortIndex(index);\n    setActiveSortDirection(direction);\n  };\n\n  // Pagination\n  const [page, setPage] = React.useState(1);\n  const [perPage, setPerPage] = React.useState(20);\n  const AccessRequestsPagination = ({ id }) => (\n    <Pagination\n      itemCount={numRows}\n      perPage={perPage}\n      page={page}\n      onSetPage={(_ev, pageNumber) => setPage(pageNumber)}\n      id={'access-requests-table-pagination-' + id}\n      variant={id}\n      perPageOptions={[5, 10, 20, 50].map((n) => ({ title: n, value: n }))}\n      onPerPageSelect={(_ev, perPage) => {\n        setPage(1);\n        setPerPage(perPage);\n      }}\n      isCompact={id === 'top'}\n    />\n  );\n\n  AccessRequestsPagination.propTypes = {\n    id: PropTypes.string,\n  };\n\n  // Filtering\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n  const [filterColumn, setFilterColumn] = React.useState(\n    columns[isInternal ? 1 : 6]\n  );\n  const [isSelectOpen, setIsSelectOpen] = React.useState(false);\n  const [statusSelections, setStatusSelections] = React.useState([]);\n\n  // Harder than it needs to be to match rest of RBAC which doesn't wait\n  // for user to click a button or press enter.\n  const [accountFilter, setAccountFilter] = React.useState('');\n  const [filtersDirty, setFiltersDirty] = React.useState(false);\n  const hasFilters = statusSelections.length > 0 || accountFilter;\n\n  // Row loading\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [numRows, setNumRows] = React.useState(0);\n  const [rows, setRows] = React.useState([]);\n  const dispatch = useDispatch();\n  const fetchAccessRequests = () => {\n    setIsLoading(true);\n    const listUrl = new URL(\n      `${window.location.origin}${API_BASE}/cross-account-requests/`\n    );\n\n    isInternal\n      ? listUrl.searchParams.append('query_by', 'user_id')\n      : listUrl.searchParams.append('query_by', 'target_account');\n\n    listUrl.searchParams.append('offset', (page - 1) * perPage);\n    listUrl.searchParams.append('limit', perPage);\n    // https://github.com/RedHatInsights/insights-rbac/blob/master/rbac/api/cross_access/view.py\n    if (accountFilter) {\n      listUrl.searchParams.append('account', accountFilter);\n    }\n    if (statusSelections.length > 0) {\n      listUrl.searchParams.append('status', statusSelections.join(','));\n    }\n    const orderBy = `${activeSortDirection === 'desc' ? '-' : ''}${columns[\n      activeSortIndex\n    ]\n      .toLowerCase()\n      .replace(' ', '_')}`;\n    listUrl.searchParams.append('order_by', orderBy);\n\n    apiInstance\n      .get(listUrl.href, { headers: { Accept: 'application/json' } })\n      .then((res) => {\n        setNumRows(res.meta.count);\n        setRows(\n          res.data.map((d) =>\n            isInternal\n              ? [\n                  d.request_id,\n                  d.target_account,\n                  d.start_date,\n                  d.end_date,\n                  d.created,\n                  d.status,\n                ]\n              : [\n                  d.request_id,\n                  d.first_name,\n                  d.last_name,\n                  d.start_date,\n                  d.end_date,\n                  d.created,\n                  d.status,\n                ]\n          )\n        );\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        dispatch(\n          addNotification({\n            variant: 'danger',\n            title: 'Could not list access requests',\n            description: err.message,\n          })\n        );\n      });\n  };\n  const debouncedAccountFilter = useDebounce(accountFilter, 400);\n  React.useEffect(() => {\n    fetchAccessRequests();\n  }, [\n    debouncedAccountFilter,\n    statusSelections,\n    activeSortIndex,\n    activeSortDirection,\n    perPage,\n    page,\n  ]);\n\n  // Modal actions\n  const [openModal, setOpenModal] = React.useState({ type: null });\n  const onModalClose = (isChanged) => {\n    setOpenModal({ type: null });\n    if (isChanged) {\n      fetchAccessRequests();\n    }\n  };\n  const modals = (\n    <React.Fragment>\n      {openModal.type === 'cancel' && (\n        <CancelRequestModal\n          requestId={openModal.requestId}\n          onClose={onModalClose}\n        />\n      )}\n      {['edit', 'create'].includes(openModal.type) && (\n        <EditRequestModal\n          variant={openModal.type}\n          requestId={openModal.requestId}\n          onClose={onModalClose}\n        />\n      )}\n    </React.Fragment>\n  );\n\n  // Rendering\n  const createButton = isInternal && (\n    <Button variant=\"primary\" onClick={() => setOpenModal({ type: 'create' })}>\n      Create request\n    </Button>\n  );\n  if (rows.length === 0 && !isLoading && !filtersDirty) {\n    return (\n      <Bullseye style={{ height: 'auto' }} className=\"pf-u-mt-lg\">\n        <EmptyState variant=\"large\">\n          <EmptyStateIcon icon={PlusCircleIcon} />\n          <Title headingLevel=\"h3\" size=\"lg\">\n            {isInternal ? 'No access requests' : 'You have no access requests'}\n          </Title>\n          <EmptyStateBody>\n            {isInternal\n              ? 'Click the button below to create an access request.'\n              : 'You have no pending Red Hat access requests.'}\n          </EmptyStateBody>\n          {createButton}\n        </EmptyState>\n        {modals}\n      </Bullseye>\n    );\n  }\n\n  const selectLabelId = 'filter-status';\n  const selectPlaceholder = `Filter by ${uncapitalize(\n    columns[columns.length - 1]\n  )}`;\n  const clearFiltersButton = (\n    <Button\n      variant=\"link\"\n      onClick={() => {\n        setStatusSelections([]);\n        setAccountFilter('');\n        setPage(1);\n      }}\n    >\n      Clear filters\n    </Button>\n  );\n  const toolbar = (\n    <Toolbar id=\"access-requests-table-toolbar\">\n      <ToolbarContent>\n        <ToolbarItem>\n          <InputGroup>\n            <Dropdown\n              isOpen={isDropdownOpen}\n              onSelect={(ev) => {\n                setIsDropdownOpen(false);\n                setFilterColumn(ev.target.value);\n                setIsSelectOpen(false);\n                setFiltersDirty(true);\n              }}\n              toggle={\n                <DropdownToggle\n                  onToggle={(isOpen) => setIsDropdownOpen(isOpen)}\n                >\n                  <FilterIcon /> {filterColumn}\n                </DropdownToggle>\n              }\n              // https://marvelapp.com/prototype/257je526/screen/74764732\n              dropdownItems={(isInternal ? [1, 5] : [6])\n                .map((i) => columns[i])\n                .map((colName) => (\n                  // Filterable columns are RequestID, AccountID, and Status\n                  <DropdownItem\n                    key={colName}\n                    value={colName}\n                    component=\"button\"\n                  >\n                    {capitalize(colName)}\n                  </DropdownItem>\n                ))}\n            />\n            {['Status', 'Decision'].includes(filterColumn) && (\n              <React.Fragment>\n                <span id={selectLabelId} hidden>\n                  {selectPlaceholder}\n                </span>\n                <Select\n                  aria-labelledby={selectLabelId}\n                  variant=\"checkbox\"\n                  aria-label=\"Select statuses\"\n                  onToggle={(isOpen) => setIsSelectOpen(isOpen)}\n                  onSelect={(_ev, selection) => {\n                    setFiltersDirty(true);\n                    if (statusSelections.includes(selection)) {\n                      setStatusSelections(\n                        statusSelections.filter((s) => s !== selection)\n                      );\n                    } else {\n                      setStatusSelections([...statusSelections, selection]);\n                    }\n                    setPage(1);\n                  }}\n                  isOpen={isSelectOpen}\n                  selections={Array.from(statusSelections)}\n                  isCheckboxSelectionBadgeHidden\n                  placeholderText={selectPlaceholder}\n                >\n                  {statuses.map((status) => (\n                    <SelectOption key={status} value={status}>\n                      {capitalize(status)}\n                    </SelectOption>\n                  ))}\n                </Select>\n              </React.Fragment>\n            )}\n            {filterColumn === 'Account number' && (\n              <form\n                style={{ display: 'flex' }}\n                onSubmit={(ev) => ev.preventDefault()}\n              >\n                <TextInput\n                  name={`${filterColumn}-filter`}\n                  id={`${filterColumn}-filter`}\n                  type=\"search\"\n                  iconVariant=\"search\"\n                  placeholder={`Filter by ${uncapitalize(filterColumn)}`}\n                  aria-label={`${filterColumn} search input`}\n                  value={accountFilter}\n                  onChange={(val) => {\n                    setAccountFilter(val), setFiltersDirty(true), setPage(1);\n                  }}\n                />\n              </form>\n            )}\n          </InputGroup>\n        </ToolbarItem>\n        <ToolbarItem>{createButton}</ToolbarItem>\n        <ToolbarItem variant=\"pagination\" align={{ default: 'alignRight' }}>\n          <AccessRequestsPagination id=\"top\" />\n        </ToolbarItem>\n      </ToolbarContent>\n      <ToolbarContent>\n        <ChipGroup categoryName=\"Status\">\n          {statusSelections.map((status) => (\n            <Chip\n              key={status}\n              onClick={() => {\n                setStatusSelections(\n                  statusSelections.filter((s) => s !== status)\n                );\n                setPage(1);\n              }}\n            >\n              {status}\n            </Chip>\n          ))}\n        </ChipGroup>\n        {accountFilter && (\n          <ChipGroup categoryName=\"Account number\">\n            <Chip\n              onClick={() => {\n                setAccountFilter(''), setPage(1);\n              }}\n            >\n              {accountFilter}\n            </Chip>\n          </ChipGroup>\n        )}\n        {hasFilters && clearFiltersButton}\n      </ToolbarContent>\n    </Toolbar>\n  );\n  function getColumnWidth(columnIndex) {\n    if (isInternal) {\n      return columnIndex === 0 ? 30 : 15;\n    }\n\n    return [0, 6].includes(columnIndex) ? 20 : 10;\n  }\n  const { url } = useRouteMatch();\n  const table = (\n    <TableComposable aria-label=\"Access requests table\" variant=\"compact\">\n      <Thead>\n        <Tr>\n          {columns.map((column, columnIndex) => (\n            <Th\n              key={columnIndex}\n              {...(!column.includes('name') &&\n                column !== 'Decision' && {\n                  sort: {\n                    sortBy: {\n                      index: activeSortIndex,\n                      direction: activeSortDirection,\n                    },\n                    onSort,\n                    columnIndex,\n                  },\n                })}\n              width={getColumnWidth(columnIndex)}\n            >\n              {column}\n            </Th>\n          ))}\n          {isInternal && <Th />}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {isLoading\n          ? [...Array(rows.length || perPage).keys()].map((i) => (\n              <Tr key={i}>\n                {columns.map((name, j) => (\n                  <Td key={j} dataLabel={name}>\n                    <div\n                      style={{ height: '30px' }}\n                      className=\"ins-c-skeleton ins-c-skeleton__md\"\n                    >\n                      {' '}\n                    </div>\n                  </Td>\n                ))}\n              </Tr>\n            ))\n          : rows.map((row, rowIndex) => (\n              <Tr key={rowIndex}>\n                <Td dataLabel={columns[0]}>\n                  <Link to={`${url}${url.endsWith('/') ? '' : '/'}${row[0]}`}>\n                    {row[0]}\n                  </Link>\n                </Td>\n                <Td dataLabel={columns[1]}>{row[1]}</Td>\n                <Td dataLabel={columns[2]}>{row[2]}</Td>\n                <Td dataLabel={columns[3]}>{row[3]}</Td>\n                <Td dataLabel={columns[4]}>{row[4]}</Td>\n                {isInternal ? (\n                  <Td dataLabel={columns[5]}>\n                    <StatusLabel\n                      requestId={row[0]}\n                      status={row[5]}\n                      onLabelClick={() => {\n                        setStatusSelections([\n                          ...statusSelections.filter((s) => s !== status),\n                          status,\n                        ]);\n                        setPage(1);\n                      }}\n                      hideActions\n                    />\n                  </Td>\n                ) : (\n                  <Td dataLabel={columns[5]}>{row[5]}</Td>\n                )}\n                {isInternal ? (\n                  // Different actions based on status\n                  <Td\n                    actions={getInternalActions(row[5], row[0], setOpenModal)}\n                  />\n                ) : (\n                  <Td dataLabel={columns[6]}>\n                    <StatusLabel requestId={row[0]} status={row[6]} />\n                  </Td>\n                )}\n              </Tr>\n            ))}\n        {rows.length === 0 && hasFilters && (\n          <Tr>\n            <Td colSpan={columns.length}>\n              <EmptyState variant=\"small\">\n                <EmptyStateIcon icon={SearchIcon} />\n                <Title headingLevel=\"h2\" size=\"lg\">\n                  No matching requests found\n                </Title>\n                <EmptyStateBody>\n                  No results match the filter criteria. Remove all filters or\n                  clear all filters to show results.\n                </EmptyStateBody>\n                {clearFiltersButton}\n              </EmptyState>\n            </Td>\n          </Tr>\n        )}\n      </Tbody>\n    </TableComposable>\n  );\n\n  return (\n    <React.Fragment>\n      {toolbar}\n      {table}\n      <AccessRequestsPagination id=\"bottom\" />\n      {modals}\n    </React.Fragment>\n  );\n};\n\nAccessRequestsTable.propTypes = {\n  isInternal: PropTypes.bool,\n};\n\nexport default AccessRequestsTable;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PageSection, Title } from '@patternfly/react-core';\nimport AccessRequestsTable from '../Components/AccessRequestsTable';\nimport PropTypes from 'prop-types';\nimport registry from '../store';\nimport ErroReducerCatcher from '../Components/ErrorReducerCatcher';\n\nconst AccessRequestsPage = ({ isInternal }) => {\n  return (\n    <Provider store={registry.getStore()}>\n      <ErroReducerCatcher>\n        <PageSection variant=\"light\">\n          <Title headingLevel=\"h1\" className=\"pf-u-pb-sm\">\n            Access Requests\n          </Title>\n          <p>\n            Below is a list of all submitted requests for read only account\n            access.\n          </p>\n        </PageSection>\n        <PageSection padding={{ default: 'noPadding' }}>\n          <AccessRequestsTable isInternal={isInternal} />\n        </PageSection>\n      </ErroReducerCatcher>\n    </Provider>\n  );\n};\n\n// This component is a federated module used in https://github.com/RedHatInsights/insights-rbac-ui\n// Try not to break RBAC.\nAccessRequestsPage.propTypes = {\n  isInternal: PropTypes.bool,\n};\n\nexport default AccessRequestsPage;\n","import { API_ERROR } from './action-types';\n\nconst setErrorState = (_, { payload }) => ({\n  errorCode: payload,\n});\n\nconst errorReducer = {\n  [API_ERROR]: setErrorState,\n};\n\nexport default errorReducer;\n","import { createContext } from 'react';\nimport ReducerRegistry, {\n  applyReducerHash,\n} from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport errorReducer from './Redux/error-reducer';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nconst registry = new ReducerRegistry({}, [\n  notificationsMiddleware({\n    errorTitleKey: ['message'],\n    errorDescriptionKey: ['errors', 'stack'],\n  }),\n]);\n\nregistry.register({\n  errorReducer: applyReducerHash(errorReducer),\n  notifications: notificationsReducer,\n});\n\nexport default registry;\n","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useDispatch` hook bound to the specified context.\n */\n\nexport function createDispatchHook(context) {\n  if (context === void 0) {\n    context = ReactReduxContext;\n  }\n\n  var useStore = context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    var store = useStore();\n    return store.dispatch;\n  };\n}\n/**\n * A hook to access the redux `dispatch` function.\n *\n * @returns {any|function} redux store's `dispatch` function\n *\n * @example\n *\n * import React, { useCallback } from 'react'\n * import { useDispatch } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const dispatch = useDispatch()\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\n *   return (\n *     <div>\n *       <span>{value}</span>\n *       <button onClick={increaseCounter}>Increase counter</button>\n *     </div>\n *   )\n * }\n */\n\nexport var useDispatch = /*#__PURE__*/createDispatchHook();"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","addNotification","notification","type","payload","removeNotification","index","clearNotifications","errorStates","NotAuthorized","ErroReducerCatcher","children","errorCode","useSelector","errorReducer","pathname","useLocation","dispatch","useDispatch","useEffect","API_ERROR","undefined","State","serviceName","propTypes","PropTypes","uncapitalize","input","toLowerCase","substring","statuses","AccessRequestsTable","isInternal","columns","React","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","onSort","_ev","direction","page","setPage","perPage","setPerPage","AccessRequestsPagination","id","Pagination","itemCount","numRows","onSetPage","pageNumber","variant","perPageOptions","map","n","title","value","onPerPageSelect","isCompact","debouncedValue","setDebouncedValue","isDropdownOpen","setIsDropdownOpen","filterColumn","setFilterColumn","isSelectOpen","setIsSelectOpen","statusSelections","setStatusSelections","accountFilter","setAccountFilter","filtersDirty","setFiltersDirty","hasFilters","length","isLoading","setIsLoading","setNumRows","rows","setRows","fetchAccessRequests","listUrl","URL","window","location","origin","API_BASE","searchParams","append","join","orderBy","replace","apiInstance","href","headers","Accept","then","res","meta","count","data","d","request_id","target_account","start_date","end_date","created","status","first_name","last_name","err","description","message","debouncedAccountFilter","handler","setTimeout","clearTimeout","openModal","setOpenModal","onModalClose","isChanged","modals","CancelRequestModal","requestId","onClose","includes","EditRequestModal","createButton","Button","onClick","Bullseye","style","className","EmptyState","EmptyStateIcon","icon","PlusCircleIcon","Title","headingLevel","size","EmptyStateBody","selectLabelId","selectPlaceholder","clearFiltersButton","toolbar","Toolbar","ToolbarContent","ToolbarItem","InputGroup","Dropdown","isOpen","onSelect","ev","target","toggle","DropdownToggle","onToggle","dropdownItems","i","colName","DropdownItem","key","component","capitalize","hidden","Select","selection","filter","s","selections","Array","from","isCheckboxSelectionBadgeHidden","placeholderText","SelectOption","display","onSubmit","preventDefault","TextInput","iconVariant","placeholder","onChange","val","align","default","ChipGroup","categoryName","Chip","getColumnWidth","columnIndex","url","useRouteMatch","table","TableComposable","Thead","Tr","column","Th","sort","sortBy","Tbody","keys","j","Td","dataLabel","row","rowIndex","Link","to","endsWith","onLabelClick","hideActions","actions","getInternalActions","colSpan","SearchIcon","AccessRequestsPage","store","registry","PageSection","padding","_","RegistryContext","createContext","getRegistry","ReducerRegistry","notificationsMiddleware","errorTitleKey","errorDescriptionKey","register","applyReducerHash","notifications","notificationsReducer","createDispatchHook","context","useStore"],"sourceRoot":""}