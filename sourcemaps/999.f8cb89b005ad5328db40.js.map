{"version":3,"sources":["webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/store.js","webpack:///./src/index.css","webpack:///./src/index.css?393b"],"names":["AccessRequestsPage","lazy","AccessRequestDetailsPage","Routes","getRegistry","useContext","RegistryContext","React","isInternal","Suspense","fallback","Bullseye","Spinner","process","Switch","Route","path","exact","component","Redirect","to","history","useHistory","useEffect","insights","chrome","init","identifyApp","on","event","push","navId","Fragment","NotificationPortal","createContext","registry","ReducerRegistry","notificationsMiddleware","errorTitleKey","errorDescriptionKey","register","notifications","notificationsReducer","exports","___CSS_LOADER_API_IMPORT___","module","id","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"6QAQMA,GAAqBC,WAAK,kBAAM,mEAChCC,GAA2BD,WAAK,kBACpC,kEAKWE,EAAS,WAAM,IAClBC,GAAgBC,gBAAWC,KAA3BF,YADkB,EAEUG,cAAe,GAFzB,WAEnBC,EAFmB,KAa1B,OAb0B,KAcxB,kBAAC,EAAAC,SAAD,CACEC,SACE,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAC,QAAD,SAnBIC,EAgCR,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAtBM,kBAChC,kBAAClB,EAAD,CAAoBQ,WAAYA,EAAYJ,YAAaA,OAsBrD,kBAAC,EAAAW,MAAD,CACEC,KAAK,cACLC,OAAK,EACLC,UAhCgC,kBACtC,kBAAChB,EAAD,CACEM,WAAYA,EACZJ,YAAaA,OA+BX,kBAAC,EAAAW,MAAD,KACE,kBAAC,EAAAI,SAAD,CAAUC,GAAG,U,oBC5BvB,QAnBY,WACV,IAAMC,GAAUC,kBAUhB,OATAC,gBAAU,WAIR,OAHAC,SAASC,OAAOC,OAEhBF,SAASC,OAAOE,YAAY,mBACrBH,SAASC,OAAOG,GAAG,kBAAkB,SAACC,GAAD,OAC1CR,EAAQS,KAAR,WAAiBD,EAAME,aAExB,IAGD,kBAAC,EAAAC,SAAD,KACE,kBAACC,EAAA,GAAD,MACA,kBAAC9B,EAAD,S,sGCfOG,GAAkB4B,mBAAc,CAC3C9B,YAAa,eAGT+B,EAAW,IAAIC,KAAgB,GAAI,EACvCC,QAAwB,CACtBC,cAAe,CAAC,WAChBC,oBAAqB,CAAC,SAAU,aAIpCJ,EAASK,SAAS,CAChBC,cAAeC,OAGjB,W,iBClBAC,EADkC,EAAQ,MAChCC,EAA4B,IAE9Bd,KAAK,CAACe,EAAOC,GAAI,0EAA2E,KAEpGD,EAAOF,QAAUA,G,yECEbI,EAAS,IAAI,IALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAK,YAAkBF,EAAOG,IAAIC,WAAY,CAC5C,IA+BIC,EAAY,WAEhBL,EAAOG,IAAIG,OACT,OACA,eAnCkB,SAAuBC,EAAGC,EAAGC,GACnD,IAAKF,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIE,EAEJ,IAAKA,KAAKH,EACR,GAKIA,EAAEG,KAAOF,EAAEE,GACb,OAAO,EAIX,IAAKA,KAAKF,EACR,IAKKD,EAAEG,GACL,OAAO,EAIX,OAAO,EAOIC,CAAcN,GADrB,YACgC,SAMxBA,EAAY,WAEZH,EAAO,MAPLF,EAAOG,IAAIC,gBAYzBJ,EAAOG,IAAIS,SAAQ,WACjBV,OAIW","file":"js/999.7f3e01d9d45347ed4ec0.js","sourcesContent":["import { Redirect, Route, Switch } from 'react-router-dom';\nimport React, { Suspense, lazy, useContext } from 'react';\nimport {\n  Bullseye,\n  Spinner,\n  Switch as ToggleSwitch,\n} from '@patternfly/react-core';\n\nconst AccessRequestsPage = lazy(() => import('./Routes/AccessRequestsPage'));\nconst AccessRequestDetailsPage = lazy(() =>\n  import('./Routes/AccessRequestDetailsPage')\n);\nimport { RegistryContext } from './store';\nconst isDev = process.env.NODE_ENV !== 'production';\n\nexport const Routes = () => {\n  const { getRegistry } = useContext(RegistryContext);\n  const [isInternal, setIsInternal] = React.useState(true);\n  const AccessRequestDetailsPageWrapper = () => (\n    <AccessRequestDetailsPage\n      isInternal={isInternal}\n      getRegistry={getRegistry}\n    />\n  );\n  const AccessRequestsPageWrapper = () => (\n    <AccessRequestsPage isInternal={isInternal} getRegistry={getRegistry} />\n  );\n\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      }\n    >\n      {isDev && (\n        <ToggleSwitch\n          id=\"toggle-view\"\n          label=\"Internal view\"\n          labelOff=\"External view\"\n          isChecked={isInternal}\n          onChange={() => setIsInternal(!isInternal)}\n        />\n      )}\n      <Switch>\n        <Route path=\"/\" exact component={AccessRequestsPageWrapper} />\n        <Route\n          path=\"/:requestId\"\n          exact\n          component={AccessRequestDetailsPageWrapper}\n        />\n        <Route>\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n","import React, { Fragment, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './index.css';\n\nconst App = () => {\n  const history = useHistory();\n  useEffect(() => {\n    insights.chrome.init();\n\n    insights.chrome.identifyApp('access-requests');\n    return insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationPortal />\n      <Routes />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { createContext } from 'react';\nimport ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nconst registry = new ReducerRegistry({}, [\n  notificationsMiddleware({\n    errorTitleKey: ['message'],\n    errorDescriptionKey: ['errors', 'stack'],\n  }),\n]);\n\nregistry.register({\n  notifications: notificationsReducer,\n});\n\nexport default registry;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".access-requests .access-requests{display:flex;flex-direction:column}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./index.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}