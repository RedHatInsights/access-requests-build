{"version":3,"file":"js/exposed-./RootApp.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/pathnames.js","webpack:///./src/Routing.tsx","webpack:///./src/App.js","webpack:///./src/Hooks/useUserData.ts","webpack:///./src/AppEntry.js","webpack:///./src/Components/ErrorReducerCatcher.js","webpack:///./src/Redux/action-types.js","webpack:///./src/Redux/error-reducer.js","webpack:///./src/store.js"],"sourcesContent":["const pathnames = {\n  accessRequests: {\n    link: '/access-requests',\n    route: '/',\n  },\n  accessRequestsDetail: {\n    link: '/access-requests/:requestId',\n    route: '/:requestId',\n  },\n};\n\nexport default pathnames;\n","import React, { Suspense, lazy, useMemo, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport {\n  Bullseye,\n  Spinner,\n  Switch as ToggleSwitch,\n} from '@patternfly/react-core';\nimport { UserData } from './Hooks/useUserData';\nimport InvalidObject from '@patternfly/react-component-groups/dist/dynamic/InvalidObject';\nimport pathnames from './pathnames';\n\nconst AccessRequestsPage = lazy(() => import('./Routes/AccessRequestsPage'));\nconst AccessRequestDetailsPage = lazy(\n  () => import('./Routes/AccessRequestDetailsPage')\n);\n\ninterface RouteType {\n  path?: string;\n  element: React.ComponentType;\n  childRoutes?: RouteType[];\n  elementProps?: Record<string, unknown>;\n}\n\nconst renderRoutes = (routes: RouteType[] = []) =>\n  routes.map(({ path, element: Element, childRoutes, elementProps }) => (\n    <Route key={path} path={path} element={<Element {...elementProps} />}>\n      {renderRoutes(childRoutes)}\n    </Route>\n  ));\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nexport const Routing = ({ userData }: { userData: UserData }) => {\n  const [isInternal, setIsInternal] = useState(userData.isInternal);\n\n  const routes = [\n    {\n      path: pathnames.accessRequests.route,\n      element: AccessRequestsPage,\n      elementProps: { isInternal },\n    },\n    {\n      path: pathnames.accessRequestsDetail.route,\n      element: AccessRequestDetailsPage,\n      elementProps: { isInternal },\n    },\n  ];\n\n  const renderedRoutes = useMemo(() => renderRoutes(routes), [routes]);\n\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      }\n    >\n      {isDev && (\n        <ToggleSwitch\n          className=\"pf-v5-u-p-sm\"\n          id=\"toggle-view\"\n          label=\"Internal view\"\n          labelOff=\"External view\"\n          checked={isInternal}\n          onChange={() => setIsInternal((prev) => !prev)}\n        />\n      )}\n      <Routes>\n        {renderedRoutes}\n        {/* Catch all unmatched routes */}\n        <Route path=\"*\" element={<InvalidObject />} />\n      </Routes>\n    </Suspense>\n  );\n};\n\nexport default Routing;\n","import React, { Fragment } from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport ErroReducerCatcher from './Components/ErrorReducerCatcher';\nimport useUserData from './Hooks/useUserData';\nimport Routing from './Routing';\n\nimport './index.css';\n\nconst App = () => {\n  const userData = useUserData();\n\n  if (!userData.ready) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  return (\n    <Fragment>\n      <ErroReducerCatcher>\n        <Routing userData={userData} />\n      </ErroReducerCatcher>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useEffect, useState } from 'react';\n\nexport interface UserData {\n  ready: boolean;\n  isInternal?: boolean;\n}\n\nconst useUserData = () => {\n  const chrome = useChrome();\n  const [userData, setUserData] = useState<UserData>({\n    ready: false,\n    isInternal: true,\n  });\n\n  useEffect(() => {\n    if (chrome && !userData.ready)\n      chrome.auth.getUser().then((user) => {\n        setUserData({\n          ready: true,\n          isInternal: user?.identity?.user?.is_internal,\n        });\n      });\n  }, [chrome, userData.ready]);\n\n  return userData;\n};\n\nexport default useUserData;\n","import React, { useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport registry, { RegistryContext } from './store';\nimport App from './App';\n\nconst AppEntry = () => {\n  const chrome = useChrome();\n\n  useEffect(() => {\n    chrome.updateDocumentTitle('Access Requests');\n  }, []);\n\n  return (\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <App />\n      </Provider>\n    </RegistryContext.Provider>\n  );\n};\n\nexport default AppEntry;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized/NotAuthorized';\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal/';\nimport { useLocation } from 'react-router-dom';\nimport { API_ERROR } from '../Redux/action-types';\n\nconst errorStates = {\n  403: NotAuthorized,\n};\n\nconst ErroReducerCatcher = ({ children }) => {\n  const errorCode = useSelector(({ errorReducer: { errorCode } }) => errorCode);\n  const { pathname } = useLocation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (errorCode) {\n      dispatch({ type: API_ERROR, payload: undefined });\n    }\n  }, [pathname]);\n\n  if (errorCode) {\n    const State = errorStates[errorCode];\n    const name = 'Access Requests';\n    return <State serviceName={name} />;\n  }\n\n  return (\n    <Fragment>\n      <NotificationPortal />\n      {children}\n    </Fragment>\n  );\n};\n\nErroReducerCatcher.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ErroReducerCatcher;\n","export const API_ERROR = 'API_ERROR';\n","import { API_ERROR } from './action-types';\n\nconst setErrorState = (_, { payload }) => ({\n  errorCode: payload,\n});\n\nconst errorReducer = {\n  [API_ERROR]: setErrorState,\n};\n\nexport default errorReducer;\n","import { createContext } from 'react';\nimport ReducerRegistry, {\n  applyReducerHash,\n} from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport errorReducer from './Redux/error-reducer';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nconst registry = new ReducerRegistry({}, [\n  notificationsMiddleware({\n    errorTitleKey: ['message'],\n    errorDescriptionKey: ['errors', 'stack'],\n  }),\n]);\n\nregistry.register({\n  errorReducer: applyReducerHash(errorReducer),\n  notifications: notificationsReducer,\n});\n\nexport default registry;\n"],"names":["link","route","AccessRequestsPage","lazy","AccessRequestDetailsPage","renderRoutes","routes","map","path","element","Element","childRoutes","elementProps","Route","key","userData","isInternal","setIsInternal","useState","renderedRoutes","useMemo","Suspense","fallback","Bullseye","Spinner","size","Routes","InvalidObject","chrome","useChrome","setUserData","ready","useEffect","auth","getUser","then","user","identity","is_internal","Fragment","updateDocumentTitle","Provider","value","getRegistry","store","getStore","errorStates","ErroReducerCatcher","children","errorCode","errorReducer","pathname","useLocation","dispatch","type","payload","undefined","State","name","serviceName","propTypes","isRequired","API_ERROR","_","RegistryContext","createContext","registry","ReducerRegistry","notificationsMiddleware","errorTitleKey","errorDescriptionKey","register","notifications"],"sourceRoot":""}