{"version":3,"sources":["webpack://@redhat-cloud-services/access-requests-frontend/./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack://@redhat-cloud-services/access-requests-frontend/./src/Components/AccessRequestsTable.js","webpack://@redhat-cloud-services/access-requests-frontend/./src/Routes/AccessRequestsPage.js"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","uncapitalize","input","toLowerCase","substring","statuses","AccessRequestsTable","isInternal","columns","React","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","onSort","_ev","index","direction","page","setPage","perPage","setPerPage","AccessRequestsPagination","id","Pagination","itemCount","numRows","onSetPage","pageNumber","variant","onPerPageSelect","isDropdownOpen","setIsDropdownOpen","filterColumn","setFilterColumn","isSelectOpen","setIsSelectOpen","statusSelections","setStatusSelections","idFilter","setIdFilter","accountFilter","setAccountFilter","isLoading","setIsLoading","setNumRows","rows","setRows","dispatch","useDispatch","fetchAccessRequests","listUrl","URL","window","location","origin","API_BASE","searchParams","append","length","join","fetch","href","then","res","json","meta","count","data","map","d","request_id","target_account","start_date","end_date","created","status","first_name","last_name","err","addNotification","title","description","message","type","openModal","setOpenModal","onModalClose","isChanged","modals","CancelRequestModal","requestId","onClose","includes","EditRequestModal","createButton","Button","onClick","Bullseye","style","className","EmptyState","EmptyStateIcon","icon","PlusCircleIcon","Title","headingLevel","size","EmptyStateBody","selectLabelId","selectPlaceholder","FilterTextForm","colName","value","setValue","inputValue","setInputValue","display","onSubmit","ev","preventDefault","TextInput","placeholder","aria-label","onChange","val","toolbar","Toolbar","ToolbarContent","ToolbarItem","InputGroup","Dropdown","isOpen","onSelect","target","toggle","DropdownToggle","onToggle","dropdownItems","i","DropdownItem","key","component","capitalize","hidden","Select","aria-labelledby","selection","filter","s","selections","Array","from","isCheckboxSelectionBadgeHidden","placeholderText","SelectOption","align","default","ChipGroup","categoryName","Chip","getColumnWidth","columnIndex","url","useRouteMatch","table","TableComposable","Thead","Tr","column","Th","sort","sortBy","Tbody","keys","j","Td","dataLabel","class","row","rowIndex","Link","to","endsWith","onLabelClick","hideActions","actions","getInternalActions","displayName","withRouter","PageSection","padding"],"mappings":"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","file":"395.fba014fc01cd4087f466.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","import React from 'react';\nimport {\n  Label,\n  Toolbar,\n  ToolbarItem,\n  ToolbarContent,\n  Button,\n  InputGroup,\n  TextInput,\n  Pagination,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  Select,\n  SelectOption,\n  ChipGroup,\n  Chip,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title\n} from '@patternfly/react-core';\nimport { TableComposable, Thead, Tbody, Tr, Th, Td } from '@patternfly/react-table';\nimport CancelRequestModal from './CancelRequestModal';\nimport EditRequestModal from './EditRequestModal';\nimport { capitalize } from '@patternfly/react-core/dist/esm/helpers/util';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport FilterIcon from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport { useDispatch } from 'react-redux'\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { getInternalActions, StatusLabel } from '../Helpers/getActions';\n\nfunction uncapitalize(input) {\n  return input[0].toLowerCase() + input.substring(1);\n}\n\nconst statuses = [\n  'pending',\n  'approved',\n  'denied',\n  'cancelled',\n  'expired'\n];\n\nconst AccessRequestsTable = ({ isInternal }) => {\n  const columns = isInternal\n    ? ['Request ID', 'Account number', 'Start date', 'End date', 'Created', 'Status']\n    : ['Request ID', 'First name', 'Last name', 'Start date', 'End date', 'Created', 'Decision'];\n\n  // Sorting\n  const [activeSortIndex, setActiveSortIndex] = React.useState(4);\n  const [activeSortDirection, setActiveSortDirection] = React.useState('desc');\n  const onSort = (_ev, index, direction) => {\n    setActiveSortIndex(index);\n    setActiveSortDirection(direction);\n  };\n\n  // Pagination\n  const [page, setPage] = React.useState(1);\n  const [perPage, setPerPage] = React.useState(10);\n  const AccessRequestsPagination = ({ id }) => (\n    <Pagination\n      itemCount={numRows}\n      perPage={perPage}\n      page={page}\n      onSetPage={(_ev, pageNumber) => setPage(pageNumber)}\n      id={'access-requests-table-pagination-' + id}\n      variant={id}\n      onPerPageSelect={(_ev, perPage) => setPerPage(perPage)}\n    />\n  );\n\n  // Filtering\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n  const [filterColumn, setFilterColumn] = React.useState(columns[0]);\n  const [isSelectOpen, setIsSelectOpen] = React.useState(false);\n  const [statusSelections, setStatusSelections] = React.useState([]);\n  const [idFilter, setIdFilter] = React.useState('');\n  const [accountFilter, setAccountFilter] = React.useState('');\n\n  // Row loading\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [numRows, setNumRows] = React.useState(0);\n  const [rows, setRows] = React.useState([]);\n  const dispatch = useDispatch();\n  const fetchAccessRequests = () => {\n    setIsLoading(true);\n    const listUrl = new URL(`${window.location.origin}${API_BASE}/cross-account-requests/`);\n    if (isInternal) {\n      listUrl.searchParams.append('query_by', 'user_id');\n    }\n    listUrl.searchParams.append('offset', (page - 1) * perPage);\n    listUrl.searchParams.append('limit', perPage);\n    if (idFilter) {\n      listUrl.searchParams.append('id', idFilter);\n    }\n    if (accountFilter) {\n      listUrl.searchParams.append('account_number', accountFilter);\n    }\n    if (statusSelections.length > 0) {\n      listUrl.searchParams.append('status', statusSelections.join(','));\n    }\n    // Currently unsupported :(\n    listUrl.searchParams.append('sort_by', columns[activeSortIndex].toLowerCase());\n    listUrl.searchParams.append('sort_direction', activeSortDirection);\n\n    fetch(listUrl.href)\n      .then(res => res.json())\n      .then(res => {\n        setNumRows(res.meta.count);\n        setRows(res.data.map(d => isInternal\n          ? [\n            d.request_id,\n            d.target_account,\n            d.start_date,\n            d.end_date,\n            d.created,\n            d.status\n          ]\n          : [\n            d.request_id,\n            d.first_name,\n            d.last_name,\n            d.start_date,\n            d.end_date,\n            d.created,\n            d.status\n          ]));\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        dispatch(addNotification({\n          variant: 'danger',\n          title: 'Could not list access requests',\n          description: err.message\n        }));\n      });\n  };\n  React.useEffect(() => { fetchAccessRequests() }, [\n    idFilter,\n    accountFilter,\n    statusSelections,\n    activeSortIndex,\n    activeSortDirection,\n    perPage,\n    page\n  ]);\n\n  // Modal actions\n  const [openModal, setOpenModal] = React.useState({ type: null });\n  const onModalClose = isChanged => {\n    setOpenModal({ type: null });\n    if (isChanged) {\n      fetchAccessRequests();\n    }\n  };\n  const modals = (\n    <React.Fragment>\n      {openModal.type === 'cancel' &&\n        <CancelRequestModal\n          requestId={openModal.requestId}\n          onClose={onModalClose}\n        />}\n      {['edit', 'create'].includes(openModal.type) &&\n        <EditRequestModal\n          variant={openModal.type}\n          requestId={openModal.requestId}\n          onClose={onModalClose}\n        />}\n    </React.Fragment>\n  );\n\n  // Rendering\n  const createButton = isInternal && (\n    <Button variant=\"primary\" onClick={() => setOpenModal({ type: 'create' })}>\n      Create request\n    </Button>\n  );\n  if (rows.length === 0 && !isLoading) {\n    return (\n      <Bullseye style={{ height: 'auto' }} className=\"pf-u-mt-lg\">\n        <EmptyState variant=\"large\">\n          <EmptyStateIcon icon={PlusCircleIcon} />\n          <Title headingLevel=\"h3\" size=\"lg\">\n            {isInternal\n              ? 'No access requests'\n              : 'You have no access requests'}\n          </Title>\n          <EmptyStateBody>\n            {isInternal\n              ? 'Click the button below to create an access request.'\n              : 'You have no pending Red Hat access requests.'}\n          </EmptyStateBody>\n          {createButton}\n        </EmptyState>\n        {modals}\n      </Bullseye>\n    );\n  }\n\n  const selectLabelId = 'filter-status';\n  const selectPlaceholder = `Filter by ${uncapitalize(columns[columns.length - 1])}`;\n  const FilterTextForm = ({ colName, value, setValue }) => {\n    const [inputValue, setInputValue] = React.useState(value);\n    return (\n      <form\n        style={{ display: 'flex' }}\n        onSubmit={ev => {\n          ev.preventDefault();\n          setValue(inputValue);\n        }}\n      >\n        <TextInput\n          name={`${colName}-filter`}\n          id={`${colName}-filter`}\n          type=\"search\"\n          placeholder={`Filter by ${uncapitalize(colName)}`}\n          aria-label={`${colName} search input`}\n          value={inputValue}\n          onChange={val => setInputValue(val)}\n        />\n        <Button variant=\"control\" type=\"submit\" aria-label={`Search button for ${colName} filter`}>\n          <SearchIcon />\n        </Button>\n      </form>\n    );\n  }\n  const toolbar = (\n    <Toolbar id=\"access-requests-table-toolbar\">\n      <ToolbarContent>\n        <ToolbarItem>\n          <InputGroup>\n            <Dropdown\n              isOpen={isDropdownOpen}\n              onSelect={ev => { setIsDropdownOpen(false); setFilterColumn(ev.target.value); setIsSelectOpen(false); }}\n              toggle={\n                <DropdownToggle onToggle={isOpen => setIsDropdownOpen(isOpen)}>\n                  <FilterIcon /> {filterColumn}\n                </DropdownToggle>\n              }\n              // https://marvelapp.com/prototype/257je526/screen/74764732\n              dropdownItems={(isInternal ? [0, 1, 5] : [0, 6]).map(i => columns[i]).map(colName =>\n                // Filterable columns are RequestID, AccountID, and Status\n                <DropdownItem key={colName} value={colName} component=\"button\">\n                  {capitalize(colName)}\n                </DropdownItem>\n              )}\n            />\n            {['Status', 'Decision'].includes(filterColumn) &&\n              <React.Fragment>\n                <span id={selectLabelId} hidden>{selectPlaceholder}</span>\n                <Select\n                  aria-labelledby={selectLabelId}\n                  variant=\"checkbox\"\n                  aria-label=\"Select statuses\"\n                  onToggle={isOpen => setIsSelectOpen(isOpen)}\n                  onSelect={(_ev, selection) => {\n                    if (statusSelections.includes(selection)) {\n                      setStatusSelections(statusSelections.filter(s => s !== selection));\n                    }\n                    else {\n                      setStatusSelections([...statusSelections, selection]);\n                    }\n                  }}\n                  isOpen={isSelectOpen}\n                  selections={Array.from(statusSelections)}\n                  isCheckboxSelectionBadgeHidden\n                  placeholderText={selectPlaceholder}\n                >\n                  {statuses.map(status =>\n                    <SelectOption key={status} value={status}>{capitalize(status)}</SelectOption>\n                  )}\n                </Select>\n              </React.Fragment>\n            }\n            {filterColumn === 'Request ID' &&\n              <FilterTextForm colName={filterColumn} value={idFilter} setValue={setIdFilter} />\n            }\n            {filterColumn === 'Account number' &&\n              <FilterTextForm colName={filterColumn} value={accountFilter} setValue={setAccountFilter} />\n            }\n          </InputGroup>\n        </ToolbarItem>\n        <ToolbarItem>\n          {createButton}\n        </ToolbarItem>\n        <ToolbarItem variant=\"pagination\" align={{ default: 'alignRight' }}>\n          <AccessRequestsPagination id=\"top\" />\n        </ToolbarItem>\n      </ToolbarContent>\n      <ToolbarContent>\n        <ChipGroup categoryName=\"Status\">\n          {statusSelections.map(status =>\n            <Chip key={status} onClick={() => setStatusSelections(statusSelections.filter(s => s !== status))}>\n              {status}\n            </Chip>\n          )}\n        </ChipGroup>\n        {idFilter && \n          <ChipGroup categoryName=\"Request ID\">\n            <Chip onClick={() => setIdFilter('')}>\n              {idFilter}\n            </Chip>\n          </ChipGroup>\n        }\n        {accountFilter &&\n          <ChipGroup categoryName=\"Account number\">\n            <Chip onClick={() => setAccountFilter('')}>\n              {accountFilter}\n            </Chip>\n          </ChipGroup>\n        }\n        {(statusSelections.length > 0 || idFilter || accountFilter) &&\n          <Button\n            variant=\"link\"\n            onClick={() => { setStatusSelections([]); setIdFilter(''); setAccountFilter(''); }}\n          >\n            Clear filters\n          </Button>}\n      </ToolbarContent>\n    </Toolbar>\n  );\n  function getColumnWidth(columnIndex) {\n    if (isInternal) {\n      return columnIndex === 0 ? 30 : 15;\n    }\n\n    return [0, 6].includes(columnIndex) ? 20 : 10;\n  }\n  const { url } = useRouteMatch();\n  const table = (\n    <TableComposable aria-label=\"Access requests table\" variant=\"compact\">\n      <Thead>\n        <Tr>\n          {columns.map((column, columnIndex) => \n            <Th\n              key={columnIndex}\n              {...!column.includes('name') && {\n                sort: {\n                  sortBy: {\n                    index: activeSortIndex,\n                    direction: activeSortDirection\n                  },\n                  onSort,\n                  columnIndex\n                }}\n              }\n              width={getColumnWidth(columnIndex)}\n            >\n              {column}\n            </Th>\n          )}\n          {isInternal && <Th />}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {isLoading\n          ? [...Array(rows.length || perPage).keys()].map(i =>\n              <Tr key={i}>\n                {columns.map((name, j) =>\n                  <Td key={j} dataLabel={name}>\n                    <div style={{ height: '30px' }} class=\"ins-c-skeleton ins-c-skeleton__md\">{' '}</div>\n                  </Td>\n                )}\n              </Tr>\n            )\n          : rows.map((row, rowIndex) =>\n            <Tr key={rowIndex}>\n              <Td dataLabel={columns[0]}>\n                <Link to={`${url}${url.endsWith('/') ? '' : '/'}${row[0]}`}>{row[0]}</Link>\n              </Td>\n              <Td dataLabel={columns[1]}>\n                {row[1]}\n              </Td>\n              <Td dataLabel={columns[2]}>\n                {row[2]}\n              </Td>\n              <Td dataLabel={columns[3]}>\n                {row[3]}\n              </Td>\n              <Td dataLabel={columns[4]}>\n                {row[4]}\n              </Td>\n              {isInternal\n                ? <Td dataLabel={columns[5]}>\n                    <StatusLabel\n                      requestId={row[0]}\n                      status={row[5]}\n                      onLabelClick={() => setStatusSelections([...statusSelections.filter(s => s !== status), status])}\n                      hideActions\n                    />\n                  </Td>\n                : <Td dataLabel={columns[5]}>\n                    {row[5]}\n                  </Td>\n              }\n              {isInternal\n                // Different actions based on status\n                ? <Td actions={getInternalActions(row[5], row[0], setOpenModal)} />\n                : <Td dataLabel={columns[6]}>\n                    <StatusLabel\n                      requestId={row[0]}\n                      status={row[6]}\n                    />\n                  </Td>\n              }\n            </Tr>\n          )}\n      </Tbody>\n    </TableComposable>\n  );\n\n  return (\n    <React.Fragment>\n      {toolbar}\n      {table}\n      <AccessRequestsPagination id=\"bottom\" />\n      {modals}\n    </React.Fragment>\n  );\n};\n\nAccessRequestsTable.displayName = 'AccessRequestsTable';\n\nexport default AccessRequestsTable;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PageSection, Title } from '@patternfly/react-core';\nimport AccessRequestsTable from '../Components/AccessRequestsTable';\n\nconst AccessRequestsPage = ({ isInternal }) => {\n  return (\n    <React.Fragment>\n      <PageSection variant=\"light\">\n        <Title headingLevel=\"h1\" className=\"pf-u-pb-sm\">Access Requests</Title>\n        <p>Below is a list of all submitted requests for read only account access.</p>\n      </PageSection>\n      <PageSection padding={{ default: 'noPadding' }}>\n        <AccessRequestsTable isInternal={isInternal} />\n      </PageSection>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(AccessRequestsPage);\n"],"sourceRoot":""}