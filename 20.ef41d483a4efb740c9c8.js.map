{"version":3,"sources":["webpack://@redhat-cloud-services/access-requests-frontend/./src/Routes/AccessRequestDetailsPage.js"],"names":["requestId","canApprove","React","request","setRequest","dispatch","useDispatch","fetch","API_BASE","then","res","json","errors","Error","details","map","e","detail","join","err","addNotification","variant","title","description","message","dismissable","requestDisplayProps","PageSection","Breadcrumb","BreadcrumbItem","render","Link","to","Title","headingLevel","size","className","Flex","spaceItems","xl","direction","default","lg","FlexItem","flex","alignSelf","Card","style","height","CardTitle","CardBody","Button","Label","getLabelProps","status","capitalize","key","val","Spinner","grow","roles"],"mappings":"kWAoIA,QA9GiC,SAAC,GAA8B,IAA5BA,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAAiB,EAChCC,eADgC,WACvDC,EADuD,KAC9CC,EAD8C,KAExDC,GAAWC,mBACjBJ,eAAgB,WACdK,MAAM,GAAD,OAAIC,eAAJ,mCAAuCR,EAAvC,MACFS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJ,GAAIA,EAAIE,OACN,MAAMC,MAAMC,QAAQF,OAAOG,KAAI,SAAAC,GAAC,OAAIA,EAAEC,UAAQC,KAAK,OAErDd,EAAWM,MANf,OAQS,SAAAS,GACLd,GAASe,QAAgB,CACvBC,QAAS,SACTC,MAAO,gCACPC,YAAaJ,EAAIK,QACjBC,aAAa,UAGlB,IAEH,IAAMC,EAAsB,GAAH,WACnBzB,EACA,CACE,CAAC,aAAc,cACf,CAAC,YAAa,cAEhB,CACE,CAAC,aAAc,cACf,CAAC,iBAAkB,oBARF,CAUvB,CAAC,aAAc,cACf,CAAC,WAAY,YACb,CAAC,UAAW,eAEd,OACE,kBAAC,aAAD,KACE,kBAAC,EAAA0B,YAAD,CAAaN,QAAQ,SACnB,kBAAC,EAAAO,WAAD,KACE,kBAAC,EAAAC,eAAD,CAAgBC,OAAQ,kBAAM,kBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,8BAC9B,kBAAC,EAAAH,eAAD,KAAiB7B,IAEnB,kBAAC,EAAAiC,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAAMC,UAAU,cAC3CpC,IAGL,kBAAC,EAAA2B,YAAD,KACE,kBAAC,EAAAU,KAAD,CAAMC,WAAY,CAAEC,GAAI,gBAAkBC,UAAW,CAAEC,QAAS,SAAUC,GAAI,QAC5E,kBAAC,EAAAC,SAAD,CAAUC,KAAM,CAAEH,QAAS,UAAYI,UAAW,CAAEJ,QAAS,qBAC3D,kBAAC,EAAAK,KAAD,CAAMC,MAAO,CAAEC,OAAQ,SACrB,kBAAC,EAAAC,UAAD,KACE,kBAAC,EAAAhB,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAA9B,oBAIF,kBAAC,EAAAe,SAAD,KACI/C,EACA,kBAAC,aAAD,KACE,yBAAKiC,UAAU,yBACZnC,EAEG,kBAAC,aAAD,KACE,+BAAO,gDACP,6BACA,kBAAC,EAAAkD,OAAD,CAAQf,UAAU,cAAlB,WACA,kBAAC,EAAAe,OAAD,CAAQf,UAAU,aAAaf,QAAQ,UAAvC,SAGF,yBAAKe,UAAU,yBACb,+BAAO,8CACP,6BACA,kBAAC,EAAAgB,MAAD,KAAOhB,UAAU,eAAiBiB,OAAclD,EAAQmD,UACrDC,QAAWpD,EAAQmD,WAK7B5B,EAAoBX,KAAI,2BAAEyC,EAAF,KAAOC,EAAP,YACvB,yBAAKrB,UAAU,yBACb,+BAAO,2BAAIqB,IACX,6BACA,6BAAMtD,EAAQqD,SAzBV,kBAAC,EAAAE,QAAD,CAASvB,KAAK,UAiChC,kBAAC,EAAAQ,SAAD,CAAUC,KAAM,CAAEH,QAAS,UAAYkB,KAAM,CAAElB,QAAS,QAAUI,UAAW,CAAEJ,QAAS,qBACtF,kBAAC,EAAAK,KAAD,CAAMC,MAAO,CAAEC,OAAQ,SACrB,kBAAC,EAAAC,UAAD,KACE,kBAAC,EAAAhB,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAA9B,oBAIF,kBAAC,EAAAe,SAAD,KACI/C,EACA,kBAAC,IAAD,CAAeyD,MAAOzD,EAAQyD,QADpB,kBAAC,EAAAF,QAAD,CAASvB,KAAK","file":"20.ef41d483a4efb740c9c8.js","sourcesContent":["import React from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  PageSection,\n  Title,\n  Card,\n  CardTitle,\n  CardBody,\n  Flex,\n  FlexItem,\n  Spinner,\n  Button,\n  Label\n} from '@patternfly/react-core';\nimport { capitalize } from '@patternfly/react-core/dist/esm/helpers/util';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport MUARolesTable from '../Components/MUARolesTable';\nimport { getLabelProps } from '../Helpers/getLabelProps';\n\nconst AccessRequestDetailsPage = ({ requestId, canApprove }) => {\n  const [request, setRequest] = React.useState();\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    fetch(`${API_BASE}/cross-account-requests/${requestId}/`)\n      .then(res => res.json())\n      .then(res => {\n        if (res.errors) {\n          throw Error(details.errors.map(e => e.detail).join('\\n'));\n        }\n        setRequest(res);\n      })\n      .catch(err => {\n        dispatch(addNotification({\n          variant: 'danger',\n          title: 'Could not load access request',\n          description: err.message,\n          dismissable: true\n        }));\n      });\n  }, []);\n  \n  const requestDisplayProps = [\n    ...(canApprove\n      ? [\n          ['first_name', 'First name'],\n          ['last_name', 'Last name']\n      ]\n      : [\n          ['request_id', 'Request ID'],\n          ['target_account', 'Account number']\n      ]),\n    ['start_date', 'Start date'],\n    ['end_date', 'End date'],\n    ['created', 'Submitted']\n  ];\n  return (\n    <React.Fragment>\n      <PageSection variant=\"light\">\n        <Breadcrumb>\n          <BreadcrumbItem render={() => <Link to=\"/\">Red Hat Access Requests</Link>} />\n          <BreadcrumbItem>{requestId}</BreadcrumbItem>\n        </Breadcrumb>\n        <Title headingLevel=\"h1\" size=\"2xl\" className=\"pf-u-pt-md\">\n          {requestId}\n        </Title>\n      </PageSection>\n      <PageSection>\n        <Flex spaceItems={{ xl: 'spaceItemsLg' }} direction={{ default: 'column', lg: 'row' }}>\n          <FlexItem flex={{ default: 'flex_1' }} alignSelf={{ default: 'alignSelfStretch' }}>\n            <Card style={{ height: '100%' }}>\n              <CardTitle>\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  Request details\n                </Title>\n              </CardTitle>\n              <CardBody>\n                {!request ? <Spinner size=\"xl\" /> :\n                  <React.Fragment>\n                    <div className=\"pf-u-pb-md pf-u-pt-md\">\n                      {canApprove\n                        ?\n                          <React.Fragment>\n                            <label><b>Request decision</b></label>\n                            <br />\n                            <Button className=\"pf-u-mr-md\">Approve</Button>\n                            <Button className=\"pf-u-mr-md\" variant=\"danger\">Deny</Button>\n                          </React.Fragment>\n                        :\n                          <div className=\"pf-u-pb-sm pf-u-pt-sm\">\n                            <label><b>Request status</b></label>\n                            <br />\n                            <Label className=\"pf-u-mt-sm\" {...getLabelProps(request.status)}>\n                              {capitalize(request.status)}\n                            </Label>\n                          </div>\n                      }\n                    </div>\n                    {requestDisplayProps.map(([key, val]) =>\n                      <div className=\"pf-u-pb-sm pf-u-pt-sm\">\n                        <label><b>{val}</b></label>\n                        <br />\n                        <div>{request[key]}</div>\n                      </div>\n                    )}\n                  </React.Fragment>\n                }\n              </CardBody>\n            </Card>\n          </FlexItem>\n          <FlexItem flex={{ default: 'flex_3' }} grow={{ default: 'grow' }} alignSelf={{ default: 'alignSelfStretch' }}>\n            <Card style={{ height: '100%' }}>\n              <CardTitle>\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  Roles requested\n                </Title>\n              </CardTitle>\n              <CardBody>\n                {!request ? <Spinner size=\"xl\" /> :\n                  <MUARolesTable roles={request.roles} />\n                }\n              </CardBody>\n            </Card>\n          </FlexItem>\n        </Flex>\n      </PageSection>\n    </React.Fragment>\n  );\n}\n\nexport default AccessRequestDetailsPage;\n\n"],"sourceRoot":""}