{"version":3,"sources":["webpack://@redhat-cloud-services/access-requests-frontend/./node_modules/@patternfly/react-icons/dist/js/icons/help-icon.js","webpack://@redhat-cloud-services/access-requests-frontend/./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack://@redhat-cloud-services/access-requests-frontend/./src/Components/CancelRequestModal.js","webpack://@redhat-cloud-services/access-requests-frontend/./src/Components/EditRequestModal.js","webpack://@redhat-cloud-services/access-requests-frontend/./src/Components/AccessRequestsTable/AccessRequestsTable.js","webpack://@redhat-cloud-services/access-requests-frontend/./src/Routes/AccessRequestsPage.js"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","CancelRequestModal","requestId","onClose","React","isLoading","setIsLoading","dispatch","useDispatch","Modal","title","isOpen","variant","actions","Button","key","onClick","fetch","API_BASE","method","headers","body","JSON","stringify","status","then","res","json","errors","length","Error","map","e","detail","join","addNotification","dismissable","err","description","message","Spinner","size","displayName","nameHelperText","helperTexts","getLabelIcon","field","Popover","bodyContent","type","aria-label","preventDefault","aria-describedby","className","noVerticalAlign","today","Date","setDate","getDate","dateFormat","date","toLocaleDateString","year","month","day","dateParse","split","padStart","RequestDetailsForm","user","targetAccount","setTargetAccount","start","setStart","end","setEnd","disableAccount","startDate","setStartDate","Form","onSubmit","ev","isDisabled","Title","headingLevel","Split","hasGutter","SplitItem","isFilled","FormGroup","label","labelIcon","TextInput","id","value","first_name","last_name","isRequired","helperText","onChange","val","placeholder","DatePicker","str","isValidDate","validators","style","padding","maxToDate","setFullYear","getFullYear","rangeStart","spaceUnderStyle","paddingBottom","ReviewStep","roles","paddingRight","slice","role","EditRequestModal","row","setUser","undefined","setRoles","isEdit","userPromise","window","insights","chrome","auth","getUser","detailsPromise","Promise","all","details","identity","target_account","start_date","end_date","display_name","step1Complete","every","Boolean","step2Complete","steps","component","enableNext","MUARolesTable","canJumpTo","nextButtonText","titleId","descriptionId","showClose","hasNoBodyWrapper","aria-labelledby","Wizard","capitalize","onSave","request_id","statuses","getActions","setOpenModal","items","push","disable","AccessRequestsTable","isApprover","columns","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","onSort","_ev","index","direction","page","setPage","perPage","setPerPage","AccessRequestsPagination","Pagination","itemCount","rows","onSetPage","pageNumber","onPerPageSelect","isDropdownOpen","setIsDropdownOpen","filterColumn","setFilterColumn","isSelectOpen","setIsSelectOpen","statusSelections","setStatusSelections","idFilter","setIdFilter","idFilters","setIdFilters","accountFilter","setAccountFilter","accountFilters","setAccountFilters","selectLabelId","selectPlaceholder","setRows","fetchAccessRequests","listUrl","URL","location","origin","searchParams","append","toLowerCase","href","data","d","created","openModal","onModalClose","isChanged","console","log","modals","includes","createButton","Bullseye","EmptyState","EmptyStateIcon","icon","PlusCircleIcon","EmptyStateBody","toolbar","Toolbar","ToolbarContent","ToolbarItem","InputGroup","Dropdown","onSelect","target","toggle","DropdownToggle","onToggle","dropdownItems","i","colName","DropdownItem","hidden","Select","selection","filter","s","selections","Array","from","isCheckboxSelectionBadgeHidden","placeholderText","SelectOption","display","concat","align","default","ChipGroup","categoryName","Chip","acc","a","table","TableComposable","Thead","Tr","column","columnIndex","Th","sort","sortBy","Tbody","colSpan","rowIndex","Td","dataLabel","Link","to","Label","getLabelProps","render","content","withRouter","PageSection"],"mappings":"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","file":"871.3c209653ca06f2cd5cd4.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.HelpIconConfig = {\n  name: 'HelpIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M521.3,576 C627.5,576 713.7,502 713.7,413.7 C713.7,325.4 627.6,253.6 521.3,253.6 C366,253.6 334.5,337.7 329.2,407.2 C329.2,414.3 335.2,416 343.5,416 L445,416 C450.5,416 458,415.5 460.8,406.5 C460.8,362.6 582.9,357.1 582.9,413.6 C582.9,441.9 556.2,470.9 521.3,473 C486.4,475.1 447.3,479.8 447.3,521.7 L447.3,553.8 C447.3,570.8 456.1,576 472,576 C487.9,576 521.3,576 521.3,576 M575.3,751.3 L575.3,655.3 C575.313862,651.055109 573.620137,646.982962 570.6,644 C567.638831,640.947672 563.552355,639.247987 559.3,639.29884 L463.3,639.29884 C459.055109,639.286138 454.982962,640.979863 452,644 C448.947672,646.961169 447.247987,651.047645 447.29884,655.3 L447.29884,751.3 C447.286138,755.544891 448.979863,759.617038 452,762.6 C454.961169,765.652328 459.047645,767.352013 463.3,767.30116 L559.3,767.30116 C563.544891,767.313862 567.617038,765.620137 570.6,762.6 C573.659349,759.643612 575.360354,755.553963 575.3,751.3 M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.HelpIcon = require('../createIcon').createIcon(exports.HelpIconConfig);\nexports[\"default\"] = exports.HelpIcon;","\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","import React from 'react';\nimport { Modal, Button, Spinner } from '@patternfly/react-core';\nimport { useDispatch } from 'react-redux'\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst CancelRequestModal = ({ requestId, onClose }) => {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const dispatch = useDispatch();\n  const onCancel = () => {\n    setIsLoading(true);\n    // https://ci.cloud.redhat.com/docs/api-docs/rbac#operations-CrossAccountRequest-patchCrossAccountRequest\n    fetch(`${API_BASE}/cross-account-requests/${requestId}/`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ status: 'cancelled' })\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.errors && res.errors.length > 0) {\n          throw Error(res.errors.map(e => e.detail).join('\\n'));\n        }\n        dispatch(addNotification({\n          variant: 'success',\n          title: 'Request cancelled successfully',\n          dismissable: true\n        }));\n        setIsLoading(false);\n        onClose(true);\n      })\n      .catch(err => {\n        dispatch(addNotification({\n          variant: 'danger',\n          title: 'There was an error cancelling your request',\n          description: err.message,\n          dismissable: true\n        }));\n        setIsLoading(false);\n      });\n  };\n  return (\n    <Modal\n      title=\"Cancel request?\"\n      isOpen\n      variant=\"small\"\n      onClose={() => onClose(false)}\n      actions={[\n        <Button key=\"confirm\" variant=\"danger\" onClick={onCancel}>Yes, cancel</Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={() => onClose(false)}>No, keep</Button>\n      ]}\n    >\n      Request <b>{requestId}</b> will be withdrawn.\n      {isLoading && <Spinner size=\"lg\" />}\n    </Modal>\n  );\n};\n\nCancelRequestModal.displayName = 'CancelRequestModal';\n\nexport default CancelRequestModal;\n","import React from 'react';\nimport { Modal, Wizard } from '@patternfly/react-core';\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Split,\n  SplitItem,\n  Popover,\n  DatePicker,\n  Title,\n  Spinner\n} from '@patternfly/react-core';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\nimport { capitalize } from '@patternfly/react-core/dist/esm/helpers/util';\nimport { isValidDate } from '@patternfly/react-core/dist/esm/components/CalendarMonth';\nimport { useDispatch } from 'react-redux'\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport MUARolesTable from './MUARolesTable';\n\nconst nameHelperText = 'Customers will be able to see this information as part of your request';\nconst helperTexts = {\n  'first name': nameHelperText,\n  'last name': nameHelperText,\n  'account number': 'This is the account number that you would like to receive read access to',\n  'access duration': 'This is the time frame you would like to be granted read access to accounts'\n};\nconst getLabelIcon = field => (\n  <Popover bodyContent={<p>{helperTexts[field]}</p>}>\n    <button\n      type=\"button\"\n      aria-label={`More info for ${field}`}\n      onClick={e => e.preventDefault()}\n      aria-describedby=\"form-name\"\n      className=\"pf-c-form__group-label-help\"\n    >\n      <HelpIcon noVerticalAlign />\n    </button>\n  </Popover>\n);\n\nconst today = new Date();\ntoday.setDate(today.getDate() - 1);\nconst dateFormat = date => date.toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\nconst dateParse = date => {\n  const split = date.split('/');\n  if (split.length !== 3) {\n    return new Date();\n  }\n  let month = split[0].padStart(2, '0');\n  let day = split[1].padStart(2, '0');\n  let year = split[2].padStart(4, '0');\n  return new Date(`${year}-${month}-${day}T00:00:00`);\n};\nconst RequestDetailsForm = ({\n  user = {},\n  targetAccount,\n  setTargetAccount,\n  start,\n  setStart,\n  end,\n  setEnd,\n  disableAccount,\n  isLoading\n}) => {\n  let [startDate, setStartDate] = React.useState();\n\n  const startValidator = date => {\n    if (isValidDate(date)) {\n      if (date < today) {\n        return 'Start date must be today or later';\n      }\n    }\n\n    return '';\n  };\n\n  const endValidator = date => {\n    if (isValidDate(startDate)) {\n      if (startDate > date) {\n        setEnd('');\n        return 'End date must be after from date';\n      }\n\n      const maxToDate = new Date(startDate);\n      maxToDate.setFullYear(maxToDate.getFullYear() + 1);\n      if (date > maxToDate) {\n        setEnd('');\n        return 'Access duration cannot be longer than one year';\n      }\n    }\n\n    return '';\n  };\n\n  const onStartChange = (str, date) => {\n    setStartDate(new Date(date));\n    setStart(str);\n    if (isValidDate(date)) {\n      date.setDate(date.getDate() + 7);\n      setEnd(dateFormat(date));\n    }\n    else {\n      setEnd('');\n    }\n  };\n\n  return (\n    <Form onSubmit={ev => ev.preventDefault()} isDisabled={isLoading}>\n      <Title headingLevel=\"h2\">Request details</Title>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <FormGroup label=\"First name\" labelIcon={getLabelIcon('first name')}>\n            <TextInput id=\"first-name\" value={user.first_name} isDisabled />\n          </FormGroup>\n        </SplitItem>\n        <SplitItem isFilled>\n          <FormGroup label=\"Last name\" labelIcon={getLabelIcon('last name')}>\n            <TextInput id=\"last-name\" value={user.last_name} isDisabled />\n          </FormGroup>\n        </SplitItem>\n      </Split>\n      <FormGroup label=\"Account number\" isRequired labelIcon={getLabelIcon('account number')} helperText=\"Enter the account number you would like access to\">\n        <TextInput\n          id=\"account-number\"\n          value={targetAccount}\n          onChange={val => setTargetAccount(val)}\n          isRequired\n          placeholder=\"865392\"\n          isDisabled={disableAccount}\n        />\n      </FormGroup>\n      <FormGroup label=\"Access duration\" isRequired labelIcon={getLabelIcon('access duration')}>\n        <Split>\n          <SplitItem>\n            <DatePicker\n              width=\"300px\"\n              aria-label=\"Start date\"\n              value={start}\n              dateFormat={dateFormat}\n              dateParse={dateParse}\n              placeholder=\"mm/dd/yyyy\"\n              onChange={onStartChange}\n              validators={[startValidator]}\n            />\n          </SplitItem>\n          <SplitItem style={{ padding: '6px 12px 0 12px' }}>\n            to\n          </SplitItem>\n          <SplitItem>\n            <DatePicker\n              width=\"300px\"\n              aria-label=\"End date\"\n              value={end}\n              dateFormat={dateFormat}\n              dateParse={dateParse}\n              placeholder=\"mm/dd/yyyy\"\n              onChange={date => setEnd(date)}\n              validators={[endValidator]}\n              rangeStart={start}\n            />\n          </SplitItem>\n        </Split>\n      </FormGroup>\n    </Form>\n  );\n};\n\n// Can't use CSS with @redhat-cloud-services/frontend-components-config because it's scoped to <main> content\n// rather than Modal content...\nconst spaceUnderStyle = { paddingBottom: '16px' };\nconst ReviewStep = ({ targetAccount, start, end, roles, isLoading }) => (\n  <React.Fragment>\n    <Title headingLevel=\"h2\" style={spaceUnderStyle}>Review details</Title>\n    <table>\n      <tr>\n        <td style={spaceUnderStyle}><b>Account number</b></td>\n        <td style={spaceUnderStyle}>{targetAccount}</td>\n      </tr>\n      <tr>\n        <td style={{ paddingRight: '32px' }}><b>Access duration</b></td>\n        <td></td>\n      </tr>\n      <tr>\n        <td>From</td>\n        <td>{start}</td>\n      </tr>\n      <tr>\n        <td style={spaceUnderStyle}>To</td>\n        <td style={spaceUnderStyle}>{end}</td>\n      </tr>\n      <tr>\n        <td><b>Roles</b></td>\n        <td>{roles[0]}</td>\n      </tr>\n      {roles.slice(1).map(role =>\n        <tr key={role}>\n          <td></td>\n          <td>{role}</td>\n        </tr>\n      )}\n    </table>\n    {isLoading && <Spinner />}\n  </React.Fragment>\n);\n\nconst EditRequestModal = ({ row = [], variant, onClose }) => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [user, setUser] = React.useState();\n  const [targetAccount, setTargetAccount] = React.useState();\n  const [start, setStart] = React.useState(variant === 'renew' ? dateFormat(new Date()) : undefined);\n  const [end, setEnd] = React.useState();\n  const [roles, setRoles] = React.useState([]);\n  const dispatch = useDispatch();\n\n  const isEdit = variant === 'edit';\n  // We need to be logged in (and see the username) which is an async request.\n  // If we're editing we also need to fetch the roles\n  React.useEffect(() => {\n    const userPromise = window.insights.chrome.auth.getUser();\n    const detailsPromise = isEdit\n      ? fetch(`${API_BASE}/cross-account-requests/${row[0]}/`).then(res => res.json())\n      : new Promise(res => res(true));\n\n    Promise.all([\n      userPromise,\n      detailsPromise\n    ])\n      .then(([user, details]) => {\n        if (user && user.identity && user.identity.user) {\n          setUser(user.identity.user);\n        }\n        else {\n          throw Error(\"Couldn't get current user. Make sure you're logged in\");\n        }\n        if (isEdit) {\n          if (details) {\n            setTargetAccount(details.target_account);\n            setStart(details.start_date);\n            setEnd(details.end_date);\n            setRoles(details.roles.map(role => role.display_name));\n          }\n          else {\n            if (details.errors) {\n              throw Error(details.errors.map(e => e.detail).join('\\n'));\n            }\n            else {\n              throw Error(`Could not fetch details for request ${row[0]}`);\n            }\n          }\n        }\n        setIsLoading(false);\n      })\n      .catch(err => {\n        dispatch(addNotification({\n          variant: 'danger',\n          title: 'Could not load access request',\n          description: err.message,\n          dismissable: true\n        }));\n      });\n  }, []);\n\n  const onSave = () => {\n    setIsLoading(true);\n    // https://cloud.redhat.com/docs/api-docs/rbac#operations-CrossAccountRequest-createCrossAccountRequests\n    const body = {\n      target_account: targetAccount,\n      start_date: start,\n      end_date: end,\n      roles\n    };\n    fetch(`${API_BASE}/cross-account-requests/${isEdit ? `/${row[0]}/` : ''}`, {\n      method: isEdit ? 'PUT' : 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.errors && res.errors.length > 0) {\n          throw Error(res.errors[0].detail);\n        }\n        dispatch(addNotification({\n          variant: 'success',\n          title: `${variant === 'edit' ? 'Edited' : 'Created'} access request`,\n          description: res.request_id,\n          dismissable: true\n        }));\n        onClose(true);\n      })\n      .catch(err => {\n        dispatch(addNotification({\n          variant: 'danger',\n          title: `Could not ${variant} access request`,\n          description: err.message,\n          dismissable: true\n        }));\n        setIsLoading(false);\n      });\n  };\n\n  const step1Complete = [targetAccount, start, end].every(Boolean);\n  const step2Complete = roles.length > 0;\n  const steps = [\n    {\n      name: 'Request details',\n      component: <RequestDetailsForm\n        user={user}\n        targetAccount={targetAccount}\n        setTargetAccount={setTargetAccount}\n        start={start}\n        setStart={setStart}\n        end={end}\n        setEnd={setEnd}\n        disableAccount={variant === 'edit' || variant === 'renew'}\n        isLoading={isLoading}\n      />,\n      enableNext: step1Complete\n    },\n    {\n      name: 'Select roles',\n      component: <MUARolesTable roles={roles} setRoles={setRoles} />,\n      enableNext: step2Complete,\n      canJumpTo: step1Complete\n    },\n    {\n      name: 'Review details',\n      component: <ReviewStep\n        targetAccount={targetAccount}\n        start={start}\n        end={end}\n        roles={roles}\n        isLoading={isLoading}\n      />,\n      canJumpTo: step1Complete && step2Complete,\n      enableNext: !isLoading,\n      nextButtonText: 'Finish'\n    }\n  ];\n\n  const titleId = `${variant}-request`;\n  const descriptionId = `${variant} request`;\n  return (\n    <Modal\n      variant=\"large\"\n      style={{ height: '900px' }}\n      showClose={false}\n      hasNoBodyWrapper\n      isOpen\n      onClose={() => onClose(false)}\n      aria-describedby={descriptionId}\n      aria-labelledby={titleId}\n    >\n      <Wizard\n        titleId={titleId}\n        descriptionId={descriptionId}\n        title={capitalize(variant) + ' request'}\n        steps={steps}\n        onClose={() => onClose(false)}\n        onSave={onSave}\n      />\n    </Modal>\n  );\n};\n\nEditRequestModal.displayName = 'EditRequestModal';\n\nexport default EditRequestModal;\n","import React from 'react';\nimport {\n  Label,\n  Toolbar,\n  ToolbarItem,\n  ToolbarContent,\n  Button,\n  InputGroup,\n  TextInput,\n  Pagination,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  Select,\n  SelectOption,\n  ChipGroup,\n  Chip,\n  Bullseye,\n  Spinner,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title\n} from '@patternfly/react-core';\nimport { TableComposable, Thead, Tbody, Tr, Th, Td } from '@patternfly/react-table';\nimport CancelRequestModal from '../CancelRequestModal';\nimport EditRequestModal from '../EditRequestModal';\nimport { capitalize } from '@patternfly/react-core/dist/esm/helpers/util';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport FilterIcon from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport { useDispatch } from 'react-redux'\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { Link } from 'react-router-dom';\nimport { getLabelProps } from '../../Helpers/getLabelProps';\n\nconst statuses = [\n  'pending',\n  'approved',\n  'denied',\n  'cancelled',\n  'expired'\n];\nfunction getActions(row, setOpenModal) {\n  const status = row[5];\n  const items = [];\n  if (status === 'pending') {\n    items.push({\n      title: 'Edit',\n      onClick: () => setOpenModal({ type: 'edit', row })\n    });\n    items.push({\n      title: 'Cancel',\n      onClick: () => setOpenModal({ type: 'cancel', row })\n    });\n  }\n  else if (status === 'expired') {\n    items.push({\n      title: 'Renew',\n      onClick: () => setOpenModal({ type: 'renew', row })\n    });\n  }\n\n  return { items, disable: items.length === 0 };\n}\n\n\n\nconst AccessRequestsTable = ({ isApprover }) => {\n  const columns = ['Request ID', 'Account number', 'Start date', 'End date', 'Created', 'Status'];\n\n  // Sorting\n  const [activeSortIndex, setActiveSortIndex] = React.useState(4);\n  const [activeSortDirection, setActiveSortDirection] = React.useState('desc');\n  const onSort = (_ev, index, direction) => {\n    setActiveSortIndex(index);\n    setActiveSortDirection(direction);\n  };\n\n  // Pagination\n  const [page, setPage] = React.useState(1);\n  const [perPage, setPerPage] = React.useState(10);\n  const AccessRequestsPagination = ({ id }) => (\n    <Pagination\n      itemCount={rows.length}\n      perPage={perPage}\n      page={page}\n      onSetPage={(_ev, pageNumber) => setPage(pageNumber)}\n      id={'access-requests-table-pagination-' + id}\n      variant={id}\n      onPerPageSelect={(_ev, perPage) => setPerPage(perPage)}\n    />\n  );\n\n  // Filtering\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n  const [filterColumn, setFilterColumn] = React.useState(columns[0]);\n  const [isSelectOpen, setIsSelectOpen] = React.useState(false);\n  const [statusSelections, setStatusSelections] = React.useState([]);\n  const [idFilter, setIdFilter] = React.useState('');\n  const [idFilters, setIdFilters] = React.useState([]);\n  const [accountFilter, setAccountFilter] = React.useState('');\n  const [accountFilters, setAccountFilters] = React.useState([]);\n  const selectLabelId = 'filter-status';\n  const selectPlaceholder = 'Filter by status';\n\n  // Row loading\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [rows, setRows] = React.useState([\n    // ['0004', '84282', '2020-04-24', '2021-04-24', '2029-02-13T11:24:03.591Z', 'pending'],\n    // ['0003', '87654', '2020-02-13', '2021-04-24', '2029-02-12T11:24:03.591Z', 'approved'],\n    // ['0002', '114470', '2019-04-24', '2020-04-24', '2020-02-13T11:24:03.591Z', 'denied'],\n    // ['0001', '169280', '2019-04-24', '2020-04-24', '2019-02-13T11:24:03.591Z', 'expired'],\n    // ['0000', '169280', '2019-04-24', '2020-04-24', '2018-02-13T11:24:03.591Z', 'cancelled']\n  ]);\n  const dispatch = useDispatch();\n  const fetchAccessRequests = () => {\n    setIsLoading(true);\n    const listUrl = new URL(`${window.location.origin}${API_BASE}/cross-account-requests/`);\n    listUrl.searchParams.append('query_by', 'user_id');\n    listUrl.searchParams.append('offset', (page - 1) * perPage);\n    listUrl.searchParams.append('limit', perPage);\n    // Currently unsupported :(\n    if (statusSelections.length > 0) {\n      listUrl.searchParams.append('status', statusSelections.join(','));\n    }\n    // Currently unsupported :(\n    listUrl.searchParams.append('sort_by', columns[activeSortIndex].toLowerCase());\n    listUrl.searchParams.append('sort_direction', activeSortDirection);\n\n    fetch(listUrl.href)\n      .then(res => res.json())\n      .then(res => {\n        setRows(res.data.map(d => [\n          d.request_id,\n          d.target_account,\n          d.start_date,\n          d.end_date,\n          d.created,\n          d.status\n        ]));\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        dispatch(addNotification({\n          variant: 'danger',\n          title: 'Could not list access requests',\n          description: err.message\n        }));\n      });\n  };\n  React.useEffect(() => {\n    fetchAccessRequests();\n  }, [statusSelections, activeSortIndex, activeSortDirection, perPage, page]);\n\n  // Modal actions\n  const [openModal, setOpenModal] = React.useState({ type: null });\n  const onModalClose = isChanged => {\n    setOpenModal({ type: null });\n    if (isChanged) {\n      console.log('isChanged', isChanged);\n      fetchAccessRequests();\n    }\n  };\n  const modals = (\n    <React.Fragment>\n      {openModal.type === 'cancel' &&\n        <CancelRequestModal\n          requestId={openModal.row[0]}\n          onClose={onModalClose}\n        />}\n      {['edit', 'renew', 'create'].includes(openModal.type) &&\n        <EditRequestModal\n          variant={openModal.type}\n          row={openModal.row}\n          onClose={onModalClose}\n        />}\n    </React.Fragment>\n  );\n\n  // Rendering\n  const createButton = !isApprover && (\n    <Button variant=\"primary\" onClick={() => setOpenModal({ type: 'create' })}>\n      Create request\n    </Button>\n  );\n  if (rows.length === 0) {\n    return (\n      <Bullseye>\n        {isLoading\n          ? <Spinner size=\"xl\" />\n          : <EmptyState variant=\"large\">\n              <EmptyStateIcon icon={PlusCircleIcon} />\n              <Title headingLevel=\"h3\" size=\"lg\">\n                {isApprover\n                  ? 'You have no access requests'\n                  : 'No access requests'}\n              </Title>\n              <EmptyStateBody>\n                {isApprover\n                  ? 'You have no pending Red Hat access requests.'\n                  : 'Click the button below to create an access request.'}\n              </EmptyStateBody>\n              {createButton}\n            </EmptyState>\n        }\n        {modals}\n      </Bullseye>\n    );\n  }\n\n  const toolbar = (\n    <Toolbar id=\"access-requests-table-toolbar\">\n      <ToolbarContent>\n        <ToolbarItem>\n          <InputGroup>\n            <Dropdown\n              isOpen={isDropdownOpen}\n              onSelect={ev => { setIsDropdownOpen(false); setFilterColumn(ev.target.value); setIsSelectOpen(false); }}\n              toggle={\n                <DropdownToggle onToggle={isOpen => setIsDropdownOpen(isOpen)}>\n                  <FilterIcon /> {filterColumn}\n                </DropdownToggle>\n              }\n              dropdownItems={[0, 1, 5].map(i => columns[i]).map(colName =>\n                // Filterable columns are RequestID, AccountID, and Status\n                <DropdownItem key={colName} value={colName} component=\"button\">\n                  {capitalize(colName)}\n                </DropdownItem>\n              )}\n            />\n            {filterColumn === 'Status' &&\n              <React.Fragment>\n                <span id={selectLabelId} hidden>{selectPlaceholder}</span>\n                <Select\n                  aria-labelledby={selectLabelId}\n                  variant=\"checkbox\"\n                  aria-label=\"Select statuses\"\n                  onToggle={isOpen => setIsSelectOpen(isOpen)}\n                  onSelect={(_ev, selection) => {\n                    if (statusSelections.includes(selection)) {\n                      setStatusSelections(statusSelections.filter(s => s !== selection));\n                    }\n                    else {\n                      setStatusSelections([...statusSelections, selection]);\n                    }\n                  }}\n                  isOpen={isSelectOpen}\n                  selections={Array.from(statusSelections)}\n                  isCheckboxSelectionBadgeHidden\n                  placeholderText={selectPlaceholder}\n                >\n                  {statuses.map(status =>\n                    <SelectOption key={status} value={status}>{capitalize(status)}</SelectOption>\n                  )}\n                </Select>\n              </React.Fragment>\n            }\n            {filterColumn === 'Request ID' &&\n              <form\n                style={{ display: 'flex' }}\n                onSubmit={ev => {\n                  ev.preventDefault();\n                  setIdFilters(idFilters.concat(idFilter));\n                  setIdFilter('');\n                }}\n              >\n                <TextInput\n                  name=\"idSearch\"\n                  id=\"idSearch\"\n                  type=\"search\"\n                  aria-label=\"Request id search input\"\n                  value={idFilter}\n                  onChange={val => setIdFilter(val)}\n                />\n                <Button variant=\"control\" type=\"submit\" aria-label=\"Search button for request id input\">\n                  <SearchIcon />\n                </Button>\n              </form>\n            }\n            {filterColumn === 'Account number' &&\n              <form\n                style={{ display: 'flex' }}\n                onSubmit={ev => {\n                  ev.preventDefault();\n                  setAccountFilters(accountFilters.concat(accountFilter));\n                  setAccountFilter('');\n                }}\n              >\n                <TextInput\n                  name=\"idSearch\"\n                  id=\"idSearch\"\n                  type=\"search\"\n                  aria-label=\"Account number search input\"\n                  value={accountFilter}\n                  onChange={val => setAccountFilter(val)}\n                />\n                <Button variant=\"control\" type=\"submit\" aria-label=\"Search button for account number input\">\n                  <SearchIcon />\n                </Button>\n              </form>\n            }\n          </InputGroup>\n        </ToolbarItem>\n        <ToolbarItem>\n          {createButton}\n        </ToolbarItem>\n        <ToolbarItem variant=\"pagination\" align={{ default: 'alignRight' }}>\n          <AccessRequestsPagination id=\"top\" />\n        </ToolbarItem>\n      </ToolbarContent>\n      <ToolbarContent>\n        <ChipGroup categoryName=\"Status\">\n          {statusSelections.map(status =>\n            <Chip key={status} onClick={() => setStatusSelections(statusSelections.filter(s => s !== status))}>\n              {status}\n            </Chip>\n          )}\n        </ChipGroup>\n        <ChipGroup categoryName=\"Request ID\">\n          {idFilters.map(id =>\n            <Chip key={id} onClick={() => setIdFilters(idFilters.filter(i => i !== id))}>\n              {id}\n            </Chip>\n          )}\n        </ChipGroup>\n        <ChipGroup categoryName=\"Account number\">\n          {accountFilters.map(acc =>\n            <Chip key={acc} onClick={() => setAccountFilters(accountFilters.filter(a => a !== acc))}>\n              {acc}\n            </Chip>\n          )}\n        </ChipGroup>\n        {(statusSelections.length > 0 || idFilters.length > 0 || accountFilters.length > 0) &&\n          <Button\n            variant=\"link\"\n            onClick={() => { setStatusSelections([]); setIdFilters([]); setAccountFilters([]); }}\n          >\n            Clear filters\n          </Button>}\n      </ToolbarContent>\n    </Toolbar>\n  );\n  const table = (\n    <TableComposable aria-label=\"Access requests table\" variant=\"compact\">\n      <Thead>\n        <Tr>\n          {columns.map((column, columnIndex) => \n            <Th\n              key={columnIndex}\n              sort={{ sortBy: { index: activeSortIndex, direction: activeSortDirection }, onSort, columnIndex }}\n              width={columnIndex === 0 ? 30 : 15}\n            >\n              {column}\n            </Th>\n          )}\n          <Th />\n        </Tr>\n      </Thead>\n      <Tbody>\n        {isLoading\n          ?\n            <Tr colSpan={6}>\n              <Bullseye>\n                <Spinner size=\"xl\" />\n              </Bullseye>\n            </Tr>\n          : rows.map((row, rowIndex) =>\n            <Tr key={rowIndex}>\n              <Td dataLabel={columns[0]}>\n                <Link to={`/${row[0]}`}>{row[0]}</Link>\n              </Td>\n              <Td dataLabel={columns[1]}>\n                {row[1]}\n              </Td>\n              <Td dataLabel={columns[2]}>\n                {row[2]}\n              </Td>\n              <Td dataLabel={columns[3]}>\n                {row[3]}\n              </Td>\n              <Td dataLabel={columns[4]}>\n                {row[4]}\n              </Td>\n              <Td dataLabel={columns[5]}>\n                <Label {...getLabelProps(row[5])} render={({ content, className }) =>\n                  <button className={className} onClick={() => setStatusSelections([...statusSelections.filter(s => s !== row[5]), row[5]])}>\n                    {content}\n                  </button>\n                }>\n                  {capitalize(row[5])}\n                </Label>\n              </Td>\n              {/* Different actions based on status */}\n              <Td actions={getActions(row, setOpenModal)} />\n            </Tr>\n          )}\n      </Tbody>\n    </TableComposable>\n  );\n\n  return (\n    <React.Fragment>\n      {toolbar}\n      {table}\n      <AccessRequestsPagination id=\"bottom\" />\n      {modals}\n    </React.Fragment>\n  );\n};\n\nAccessRequestsTable.displayName = 'AccessRequestsTable';\n\nexport default AccessRequestsTable;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PageSection, Title } from '@patternfly/react-core';\nimport AccessRequestsTable from '../Components/AccessRequestsTable/AccessRequestsTable';\n\nconst AccessRequestsPage = () => {\n  return (\n    <React.Fragment>\n      <PageSection variant=\"light\">\n        <Title headingLevel=\"h1\" className=\"pf-u-pb-sm\">Access Requests</Title>\n        <p>Below is a list of all submitted requests for read only account access.</p>\n      </PageSection>\n      <PageSection padding={{ default: 'noPadding' }}>\n        <AccessRequestsTable />\n      </PageSection>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(AccessRequestsPage);\n"],"sourceRoot":""}