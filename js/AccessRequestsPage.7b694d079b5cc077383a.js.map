{"version":3,"sources":["webpack://access-requests-frontend/./src/Components/CancelRequestModal.js","webpack://access-requests-frontend/./src/Components/roles.js","webpack://access-requests-frontend/./src/Components/MUARolesTable.js","webpack://access-requests-frontend/./src/Components/EditRequestModal.js","webpack://access-requests-frontend/./src/Components/AccessRequestsTable/AccessRequestsTable.js","webpack://access-requests-frontend/./src/Routes/AccessRequests/AccessRequestsPage.js"],"names":["CancelRequestModal","requestId","onClose","Modal","title","isOpen","variant","actions","Button","key","onClick","displayName","uuid","name","display_name","description","created","modified","policyCount","accessCount","applications","system","platform_default","roleList","role","permissions","length","Array","from","flat","reduce","acc","cur","add","Set","sort","MUARolesTable","roles","setRoles","columns","React","rows","setRows","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","onSort","_ev","index","direction","isDropdownOpen","setIsDropdownOpen","filterColumn","setFilterColumn","isSelectOpen","setIsSelectOpen","appSelections","setAppSelections","nameFilter","setNameFilter","nameFilters","setNameFilters","selectLabelId","selectPlaceholder","filteredRows","filter","row","find","app","includes","some","toLowerCase","page","setPage","perPage","setPerPage","AccessRequestsPagination","id","Pagination","itemCount","onSetPage","pageNumber","onPerPageSelect","isCompact","pagedRows","a","b","localeCompare","slice","isBulkSelectOpen","setIsBulkSelectOpen","anySelected","someChecked","isChecked","onSelect","isSelected","rowId","concat","unselectedUUID","onSelectAll","Title","headingLevel","Toolbar","ToolbarContent","ToolbarItem","Dropdown","position","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","aria-label","onToggle","dropdownItems","DropdownItem","Math","min","InputGroup","ev","target","value","map","colName","component","capitalize","hidden","Select","aria-labelledby","selection","s","selections","isCheckboxSelectionBadgeHidden","placeholderText","style","maxHeight","overflowY","SelectOption","display","onSubmit","preventDefault","TextInput","type","onChange","val","align","default","ChipGroup","categoryName","Chip","status","TableComposable","Thead","Tr","Th","width","sortBy","columnIndex","modifier","Tbody","rowIndex","Td","select","r","dataLabel","TableText","wrapModifier","nameHelperText","helperTexts","getLabelIcon","field","Popover","bodyContent","e","aria-describedby","className","noVerticalAlign","today","Date","setDate","getDate","RequestDetailsForm","user","accountId","setAccountId","setFrom","to","setTo","disableAccount","fromDate","setFromDate","Form","Split","hasGutter","SplitItem","isFilled","FormGroup","label","labelIcon","first_name","isDisabled","last_name","isRequired","helperText","placeholder","DatePicker","str","date","isValidDate","yyyyMMddFormat","validators","padding","maxToDate","setFullYear","getFullYear","rangeStart","spaceUnderStyle","paddingBottom","ReviewStep","paddingRight","splice","EditRequestModal","setUser","undefined","window","insights","chrome","auth","getUser","then","identity","console","log","err","error","step1Complete","every","Boolean","step2Complete","steps","enableNext","canJumpTo","nextButtonText","titleId","descriptionId","height","showClose","hasNoBodyWrapper","Wizard","statuses","getActions","setOpenModal","items","push","disable","startEndDateFormat","Intl","DateTimeFormat","dateStyle","createdDateFormat","timeStyle","timeZone","AccessRequestsTable","statusSelections","setStatusSelections","openModal","i","column","href","format","Label","color","icon","render","content","withRouter","PageSection"],"mappings":"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","file":"js/AccessRequestsPage.7b694d079b5cc077383a.js","sourcesContent":["import React from 'react';\nimport { Modal, Button } from '@patternfly/react-core';\n\nconst CancelRequestModal = ({ requestId, onClose }) => {\n  return (\n    <Modal\n      title=\"Cancel request?\"\n      isOpen\n      variant=\"small\"\n      onClose={onClose}\n      actions={[\n        <Button key=\"confirm\" variant=\"danger\" onClick={onClose}>Yes, cancel</Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={onClose}>No, keep</Button>\n      ]}\n    >\n      Request <b>{requestId}</b> will be withdrawn.\n    </Modal>\n  );\n};\n\nCancelRequestModal.displayName = 'CancelRequestModal';\n\nexport default CancelRequestModal;\n","/* eslint-disable camelcase */\nexport default [\n  {\n    uuid: 'd36b3088-55b4-4360-8d10-c85acdc4fd0f',\n    name: 'Insights administrator',\n    display_name: 'Advisor administrator',\n    description: 'Perform any available operation against any advisor resource.',\n    created: '2021-01-07T20:37:46.550671Z',\n    modified: '2021-01-07T20:37:46.557273Z',\n    policyCount: 1,\n    accessCount: 2,\n    applications: [\n      'inventory',\n      'advisor'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: '2f567b6a-010a-403e-a529-d19346259d29',\n    name: 'Approval Administrator',\n    display_name: 'Approval Administrator',\n    description: 'An approval administrator role that grants permissions to manage workflows, requests, actions, and templates.',\n    created: '2021-01-07T20:37:45.804521Z',\n    modified: '2021-01-07T20:37:45.805423Z',\n    policyCount: 0,\n    accessCount: 11,\n    applications: [\n      'approval'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: '243b26b3-fa51-482e-81e5-e561f6c39b58',\n    name: 'Approval Approver',\n    display_name: 'Approval Approver',\n    description: 'An approval approver role that grants permissions to read and approve requests.',\n    created: '2021-01-07T20:37:46.023017Z',\n    modified: '2021-01-07T20:37:46.024004Z',\n    policyCount: 0,\n    accessCount: 3,\n    applications: [\n      'approval'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: 'ce6380bf-b6ee-4cbb-b373-7939b11c5bfc',\n    name: 'Approval User',\n    display_name: 'Approval User',\n    description: 'An approval user role which grants permissions to create/read/cancel a request, and read workflows.',\n    created: '2021-01-07T20:37:45.954546Z',\n    modified: '2021-01-07T20:37:45.955495Z',\n    policyCount: 1,\n    accessCount: 5,\n    applications: [\n      'approval'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: 'f40ae207-8ad0-4c3b-a9a8-9f35507b6385',\n    name: 'Catalog Administrator',\n    display_name: 'Catalog Administrator',\n    description: 'A catalog administrator roles grants create,read,update, delete and order permissions',\n    created: '2021-01-07T20:37:46.068280Z',\n    modified: '2021-01-07T20:37:46.069210Z',\n    policyCount: 0,\n    accessCount: 28,\n    applications: [\n      'catalog'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: '1afbbb3b-246e-4234-8be4-97a08fc08cf5',\n    name: 'Catalog User',\n    display_name: 'Catalog User',\n    description: 'A catalog user roles grants read and order permissions',\n    created: '2021-01-07T20:37:46.390765Z',\n    modified: '2021-01-07T20:37:46.391763Z',\n    policyCount: 1,\n    accessCount: 15,\n    applications: [\n      'catalog'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: 'f0b212ed-1d3e-4498-b1ca-47b6743ac7d6',\n    name: 'Compliance administrator',\n    display_name: 'Compliance administrator',\n    description: 'Perform any available operation against any Compliance resource.',\n    created: '2021-01-07T20:37:46.668492Z',\n    modified: '2021-01-07T20:37:46.669446Z',\n    policyCount: 1,\n    accessCount: 2,\n    applications: [\n      'compliance',\n      'inventory'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: '23589904-25fb-4270-82f1-e48ccd117ead',\n    name: 'Cost Administrator',\n    display_name: 'Cost Administrator',\n    description: 'A cost management administrator role that grants read and write permissions.',\n    created: '2021-01-07T20:37:45.612640Z',\n    modified: '2021-01-07T20:37:45.613553Z',\n    policyCount: 0,\n    accessCount: 1,\n    applications: [\n      'cost-management'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: '61c9395d-ed5b-4e47-9ad2-dd3e7e6b8d8a',\n    name: 'Cost Cloud Viewer',\n    display_name: 'Cost Cloud Viewer',\n    description: 'A cost management role that grants read permissions on cost reports related to cloud sources.',\n    created: '2021-01-07T20:37:45.668118Z',\n    modified: '2021-01-07T20:37:45.669028Z',\n    policyCount: 0,\n    accessCount: 3,\n    applications: [\n      'cost-management'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: 'a7cac665-cb4a-4de6-8253-f7a78be9d535',\n    name: 'Cost OpenShift Viewer',\n    display_name: 'Cost OpenShift Viewer',\n    description: 'A cost management role that grants read permissions on cost reports related to OpenShift sources.',\n    created: '2021-01-07T20:37:45.698657Z',\n    modified: '2021-01-07T20:37:45.699565Z',\n    policyCount: 0,\n    accessCount: 1,\n    applications: [\n      'cost-management'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: 'f85bf8e0-654c-4e82-b909-978c4a9ca579',\n    name: 'Cost Price List Administrator',\n    display_name: 'Cost Price List Administrator',\n    description: 'A cost management role that grants read and write permissions on cost models.',\n    created: '2021-01-07T20:37:45.629746Z',\n    modified: '2021-01-07T20:37:45.630659Z',\n    policyCount: 0,\n    accessCount: 1,\n    applications: [\n      'cost-management'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: 'a8c63801-915f-4ae0-acfb-692c52c0b69a',\n    name: 'Cost Price List Viewer',\n    display_name: 'Cost Price List Viewer',\n    description: 'A cost management role that grants read permissions on cost models.',\n    created: '2021-01-07T20:37:45.646727Z',\n    modified: '2021-01-07T20:37:45.647684Z',\n    policyCount: 0,\n    accessCount: 1,\n    applications: [\n      'cost-management'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: '0d12e4c2-b201-4527-952c-ba62764f4bad',\n    name: 'Drift analysis administrator',\n    display_name: 'Drift analysis administrator',\n    description: 'Perform any available operation against any Drift Analysis resource.',\n    created: '2021-01-07T20:37:45.780455Z',\n    modified: '2021-01-07T20:37:45.781365Z',\n    policyCount: 1,\n    accessCount: 2,\n    applications: [\n      'inventory',\n      'drift'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: '166c6515-6b41-4d7c-ac2a-ae7be15891d5',\n    name: 'Inventory administrator',\n    display_name: 'Inventory administrator',\n    description: 'Perform any available operation against any Inventory resource.',\n    created: '2021-01-07T20:37:46.692541Z',\n    modified: '2021-01-07T20:37:46.693463Z',\n    policyCount: 1,\n    accessCount: 1,\n    applications: [\n      'inventory'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: '2c9faecf-d856-4cdf-8594-fe56d00d4cfc',\n    name: 'Migration Analytics administrator',\n    display_name: 'Migration Analytics administrator',\n    description: 'Perform any available operation against any Migration Analytics resource.',\n    created: '2021-01-07T20:37:46.603550Z',\n    modified: '2021-01-07T20:37:46.604452Z',\n    policyCount: 1,\n    accessCount: 1,\n    applications: [\n      'migration-analytics'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: '4e1ac715-1695-4f58-a5ec-8fbbecdd4dd8',\n    name: 'Notifications administrator',\n    display_name: 'Notifications administrator',\n    description: 'Perform any available operation against Notifications and Integrations applications.',\n    created: '2021-01-25T13:57:57.029768Z',\n    modified: '2021-01-25T13:57:57.030690Z',\n    policyCount: 0,\n    accessCount: 2,\n    applications: [\n      'notifications',\n      'integrations'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: 'b152b4a3-eeb3-48b0-9ee5-77ec484d17de',\n    name: 'Notifications viewer',\n    display_name: 'Notifications viewer',\n    description: 'Read only access to notifications and integrations applications.',\n    created: '2021-01-25T13:57:57.045113Z',\n    modified: '2021-01-25T13:57:57.045904Z',\n    policyCount: 1,\n    accessCount: 2,\n    applications: [\n      'notifications',\n      'integrations'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: '01cb2ed0-7dc3-40ca-9bfa-5c7dec117a19',\n    name: 'Patch administrator',\n    display_name: 'Patch administrator',\n    description: 'Perform any available operation against any Patch resource.',\n    created: '2021-01-07T20:37:45.756506Z',\n    modified: '2021-01-07T20:37:45.757410Z',\n    policyCount: 1,\n    accessCount: 2,\n    applications: [\n      'patch',\n      'inventory'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: 'a3683158-0160-45d4-9314-4bd1979b2a71',\n    name: 'Policies administrator',\n    display_name: 'Policies administrator',\n    description: 'Perform any available operation against any Policies resource.',\n    created: '2021-01-07T20:37:45.587727Z',\n    modified: '2021-01-07T20:37:45.588677Z',\n    policyCount: 1,\n    accessCount: 2,\n    applications: [\n      'policies',\n      'inventory'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: 'dfadd29f-5141-4859-8f41-8059943e1f46',\n    name: 'Remediations administrator',\n    display_name: 'Remediations administrator',\n    description: 'Perform any available operation against any Remediations resource',\n    created: '2021-01-07T20:37:46.620751Z',\n    modified: '2021-01-07T20:37:46.621737Z',\n    policyCount: 0,\n    accessCount: 2,\n    applications: [\n      'remediations',\n      'inventory'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: 'f51b2a5e-2a44-4d0e-9287-0d872a3de3b7',\n    name: 'Remediations user',\n    display_name: 'Remediations user',\n    description: 'Perform create, view, update, delete operations against any Remediations resource.',\n    created: '2021-01-07T20:37:46.644599Z',\n    modified: '2021-01-07T20:37:46.645536Z',\n    policyCount: 1,\n    accessCount: 2,\n    applications: [\n      'remediations'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: 'e6520b0f-40af-43ec-baae-804a3efddb09',\n    name: 'Sources administrator',\n    display_name: 'Sources administrator',\n    description: 'Perform any available operation against any Source',\n    created: '2021-01-07T20:37:45.715506Z',\n    modified: '2021-01-07T20:37:45.716410Z',\n    policyCount: 0,\n    accessCount: 1,\n    applications: [\n      'sources'\n    ],\n    system: true,\n    platform_default: false\n  },\n  {\n    uuid: 'c4737d6f-734f-406c-bb38-a73d678caee4',\n    name: 'Subscription Watch administrator',\n    display_name: 'Subscription Watch administrator',\n    description: 'Perform any available operation against any Subscription Watch resource.',\n    created: '2021-01-07T20:37:46.579885Z',\n    modified: '2021-01-07T20:37:46.580852Z',\n    policyCount: 1,\n    accessCount: 2,\n    applications: [\n      'inventory',\n      'subscriptions'\n    ],\n    system: true,\n    platform_default: true\n  },\n  {\n    uuid: '97569ae7-be84-4f08-9165-b34d02e05d07',\n    name: 'Vulnerability administrator',\n    display_name: 'Vulnerability administrator',\n    description: 'Perform any available operation against any Vulnerability resource.',\n    created: '2021-01-07T20:37:45.732726Z',\n    modified: '2021-01-07T20:37:45.733647Z',\n    policyCount: 1,\n    accessCount: 2,\n    applications: [\n      'inventory',\n      'vulnerability'\n    ],\n    system: true,\n    platform_default: true\n  }\n];\n","import React from 'react';\nimport {\n  Title,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  Select,\n  Dropdown,\n  SelectOption,\n  DropdownItem,\n  DropdownToggle,\n  InputGroup,\n  TextInput,\n  Button,\n  Pagination,\n  ChipGroup,\n  Chip,\n  DropdownToggleCheckbox\n} from '@patternfly/react-core';\nimport { TableComposable, Thead, Tbody, Tr, Th, Td, TableText } from '@patternfly/react-table';\nimport roleList from './roles.js';\nimport FilterIcon from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { capitalize } from '@patternfly/react-core/dist/esm/helpers/util';\n\nroleList.forEach(role => role.permissions = role.applications.length);\nconst applications = Array.from(\n  roleList\n  .map(role => role.applications)\n  .flat()\n  .reduce((acc, cur) => {\n    acc.add(cur);\n    return acc;\n  }, new Set())\n).sort();\n\nconst MUARolesTable = ({ roles, setRoles }) => {\n  const columns = ['Role name', 'Role description', 'Permissions'];\n  const [rows, setRows] = React.useState(roleList);\n  // TODO: fetch('/api/rbac/v1/roles/?limit=1000&order_by=display_name').then(res => res.json()).then(j => console.log(j))\n\n  // Filtering\n  const [activeSortIndex, setActiveSortIndex] = React.useState('name');\n  const [activeSortDirection, setActiveSortDirection] = React.useState('asc');\n  const onSort = (_ev, index, direction) => {\n    setActiveSortIndex(index);\n    setActiveSortDirection(direction);\n    // sorts the rows\n    const updatedRows = rows;\n    setRows(updatedRows);\n  };\n\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n  const [filterColumn, setFilterColumn] = React.useState(columns[0]);\n  const [isSelectOpen, setIsSelectOpen] = React.useState(false);\n  const [appSelections, setAppSelections] = React.useState([]);\n  const [nameFilter, setNameFilter] = React.useState('');\n  const [nameFilters, setNameFilters] = React.useState([]);\n  const selectLabelId = 'filter-application';\n  const selectPlaceholder = 'Filter by application';\n\n  const filteredRows = rows\n  .filter(row => appSelections.length > 0 ? row.applications.find(app => appSelections.includes(app)) : true)\n  .filter(row => nameFilters.length > 0 ? nameFilters.some(name => row.name.toLowerCase().includes(name)) : true);\n\n  // Pagination\n  const [page, setPage] = React.useState(1);\n  const [perPage, setPerPage] = React.useState(10);\n  const AccessRequestsPagination = ({ id }) => (\n    <Pagination\n      itemCount={filteredRows.length}\n      perPage={perPage}\n      page={page}\n      onSetPage={(_ev, pageNumber) => setPage(pageNumber)}\n      id={'access-requests-roles-table-pagination-' + id}\n      variant={id}\n      onPerPageSelect={(_ev, perPage) => setPerPage(perPage)}\n      isCompact={id === 'top'}\n    />\n  );\n  const pagedRows = filteredRows\n  .sort((a, b) => {\n    if (typeof a[activeSortIndex] === 'number') {\n      // numeric sort\n      if (activeSortDirection === 'asc') {\n        return a[activeSortIndex] - b[activeSortIndex];\n      }\n\n      return b[activeSortIndex] - a[activeSortIndex];\n    } else {\n      // string sort\n      if (activeSortDirection === 'asc') {\n        return a[activeSortIndex].localeCompare(b[activeSortIndex]);\n      }\n\n      return b[activeSortIndex].localeCompare(a[activeSortIndex]);\n    }\n  })\n  .slice((page - 1) * perPage, page * perPage);\n\n  // Selecting\n  const [isBulkSelectOpen, setIsBulkSelectOpen] = React.useState(false);\n  const anySelected = roles.length > 0;\n  const someChecked = anySelected ? null : false;\n  const isChecked = roles.length === filteredRows.length ? true : someChecked;\n  const onSelect = (_ev, isSelected, rowId) => {\n    if (isSelected) {\n      setRoles(roles.concat(filteredRows[rowId]));\n    }\n    else {\n      const unselectedUUID = filteredRows[rowId].uuid;\n      setRoles(roles.filter(role => role.uuid !== unselectedUUID));\n    }\n  };\n\n  const onSelectAll = (_ev, isSelected) => {\n    if (isSelected) {\n      setRoles([...filteredRows]);\n    }\n    else {\n      setRoles([]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Title headingLevel=\"h2\">Select roles</Title>\n      <p>Select the roles you would like access to.</p>\n      <Toolbar id=\"access-requests-roles-table-toolbar\">\n        <ToolbarContent>\n          <ToolbarItem>\n            <Dropdown\n              onSelect={() => setIsBulkSelectOpen(!isBulkSelectOpen)}\n              position=\"left\"\n              toggle={\n                <DropdownToggle\n                  splitButtonItems={[\n                    <DropdownToggleCheckbox\n                      key=\"a\"\n                      id=\"example-checkbox-2\"\n                      aria-label={anySelected ? 'Deselect all' : 'Select all'}\n                      isChecked={isChecked}\n                      onClick={() => onSelectAll(null, !anySelected)}\n                    />\n                  ]}\n                  onToggle={isOpen => setIsBulkSelectOpen(isOpen)}\n                >\n                  {roles.length !== 0 && <React.Fragment>{roles.length} selected</React.Fragment>}\n                </DropdownToggle>\n              }\n              isOpen={isBulkSelectOpen}\n              dropdownItems={[\n                <DropdownItem key=\"0\" onClick={() => onSelectAll(null, false)}>\n                  Select none (0 items)\n                </DropdownItem>,\n                <DropdownItem key=\"1\" onClick={() => setRoles(roles.concat(pagedRows))}>\n                  Select page ({Math.min(pagedRows.length, perPage)} items)\n                </DropdownItem>,\n                <DropdownItem key=\"2\" onClick={() => onSelectAll(null, true)}>\n                  Select all ({filteredRows.length} items)\n                </DropdownItem>\n              ]}\n            />\n          </ToolbarItem>\n          <ToolbarItem>\n            <InputGroup>\n              <Dropdown\n                isOpen={isDropdownOpen}\n                onSelect={ev => { setIsDropdownOpen(false); setFilterColumn(ev.target.value); setIsSelectOpen(false); }}\n                toggle={\n                  <DropdownToggle onToggle={isOpen => setIsDropdownOpen(isOpen)}>\n                    <FilterIcon /> {filterColumn}\n                  </DropdownToggle>\n                }\n                dropdownItems={['Role name', 'Application'].map(colName =>\n                  // Filterable columns are RequestID, AccountID, and Status\n                  <DropdownItem key={colName} value={colName} component=\"button\">\n                    {capitalize(colName)}\n                  </DropdownItem>\n                )}\n              />\n              {filterColumn === 'Application' ?\n                <React.Fragment>\n                  <span id={selectLabelId} hidden>{selectPlaceholder}</span>\n                  <Select\n                    aria-labelledby={selectLabelId}\n                    variant=\"checkbox\"\n                    aria-label=\"Select applications\"\n                    onToggle={isOpen => setIsSelectOpen(isOpen)}\n                    onSelect={(_ev, selection) => {\n                      if (appSelections.includes(selection)) {\n                        setAppSelections(appSelections.filter(s => s !== selection));\n                      }\n                      else {\n                        setAppSelections([...appSelections, selection]);\n                      }\n                    }}\n                    isOpen={isSelectOpen}\n                    selections={Array.from(appSelections)}\n                    isCheckboxSelectionBadgeHidden\n                    placeholderText={selectPlaceholder}\n                    style={{ maxHeight: '400px', overflowY: 'auto' }}\n                  >\n                    {applications.map(app =>\n                      <SelectOption key={app} value={app}>{capitalize(app)}</SelectOption>\n                    )}\n                  </Select>\n                </React.Fragment>\n                : <form\n                  style={{ display: 'flex' }}\n                  onSubmit={ev => {\n                    ev.preventDefault();\n                    setNameFilters(nameFilters.concat(nameFilter));\n                    setNameFilter('');\n                  }}\n                >\n                  <TextInput\n                    name=\"rolesSearch\"\n                    id=\"rolesSearch\"\n                    type=\"search\"\n                    aria-label=\"Search input\"\n                    value={nameFilter}\n                    onChange={val => setNameFilter(val)}\n                  />\n                  <Button variant=\"control\" type=\"submit\" aria-label=\"Search button for search input\">\n                    <SearchIcon />\n                  </Button>\n                </form>\n              }\n            </InputGroup>\n          </ToolbarItem>\n          <ToolbarItem variant=\"pagination\" align={{ default: 'alignRight' }}>\n            <AccessRequestsPagination id=\"top\" />\n          </ToolbarItem>\n        </ToolbarContent>\n        {(appSelections.length > 0 || nameFilters.length > 0) &&\n          <ToolbarContent>\n            {nameFilters.length > 0 &&\n              <ChipGroup categoryName=\"Role name\">\n                {nameFilters.map(name =>\n                  <Chip key={name} onClick={() => setNameFilters(nameFilters.filter(s => s !== name))}>\n                    {name}\n                  </Chip>\n                )}\n              </ChipGroup>\n            }\n            {appSelections.length > 0 &&\n              <ChipGroup categoryName=\"Status\">\n                {appSelections.map(status =>\n                  <Chip key={status} onClick={() => setAppSelections(appSelections.filter(s => s !== status))}>\n                    {status}\n                  </Chip>\n                )}\n              </ChipGroup>\n            }\n            {(appSelections.length > 0 || nameFilters.length > 0) &&\n              <Button\n                variant=\"link\"\n                onClick={() => { setAppSelections([]); setNameFilters([]); }}\n              >\n                Clear filters\n              </Button>\n            }\n          </ToolbarContent>\n        }\n      </Toolbar>\n      <TableComposable aria-label=\"My user access roles\" variant=\"compact\">\n        <Thead>\n          <Tr>\n            <Th />\n            <Th\n              width={30}\n              sort={{ sortBy: { index: activeSortIndex, direction: activeSortDirection }, onSort, columnIndex: 'name' }}\n            >\n              {columns[0]}\n            </Th>\n            <Th\n              width={50}\n              sort={{ sortBy: { index: activeSortIndex, direction: activeSortDirection }, onSort, columnIndex: 'description' }}\n            >\n              {columns[1]}\n            </Th>\n            <Th\n              width={10}\n              sort={{ sortBy: { index: activeSortIndex, direction: activeSortDirection }, onSort, columnIndex: 'permissions' }}\n              modifier=\"nowrap\"\n            >\n              {columns[2]}\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {pagedRows.map((row, rowIndex) => (\n            <Tr key={rowIndex}>\n              <Td\n                select={{\n                  rowIndex,\n                  onSelect,\n                  isSelected: roles.find(r => r.uuid === row.uuid)\n                }}\n              />\n              <Td dataLabel={columns[0]}>\n                {row.name}\n              </Td>\n              <Td dataLabel={columns[1]}>\n                <TableText wrapModifier=\"truncate\">\n                  {row.description}\n                </TableText>\n              </Td>\n              <Td dataLabel={columns[2]}>\n                {row.permissions}\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </TableComposable>\n    </React.Fragment>\n  );\n};\n\nMUARolesTable.displayName = 'MUARolesTable';\n\nexport default MUARolesTable;\n\n","import React from 'react';\nimport { Modal, Wizard } from '@patternfly/react-core';\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  Split,\n  SplitItem,\n  Popover,\n  DatePicker,\n  Title\n} from '@patternfly/react-core';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\nimport MUARolesTable from './MUARolesTable';\nimport { capitalize } from '@patternfly/react-core/dist/esm/helpers/util';\nimport { isValidDate } from '@patternfly/react-core/dist/esm/components/CalendarMonth';\nimport { yyyyMMddFormat } from '@patternfly/react-core/dist/esm/components/DatePicker';\n\nconst nameHelperText = 'Customers will be able to see this information as part of your request';\nconst helperTexts = {\n  'first name': nameHelperText,\n  'last name': nameHelperText,\n  'account id': 'This is the account ID that you would like to receive read access to',\n  'access duration': 'This is the time frame you would like to be granted read access to accounts'\n};\nconst getLabelIcon = field => (\n  <Popover bodyContent={<p>{helperTexts[field]}</p>}>\n    <button\n      type=\"button\"\n      aria-label={`More info for ${field}`}\n      onClick={e => e.preventDefault()}\n      aria-describedby=\"form-name\"\n      className=\"pf-c-form__group-label-help\"\n    >\n      <HelpIcon noVerticalAlign />\n    </button>\n  </Popover>\n);\n\nconst today = new Date();\ntoday.setDate(today.getDate() - 1);\n\nconst RequestDetailsForm = ({\n  user = {},\n  accountId,\n  setAccountId,\n  from,\n  setFrom,\n  to,\n  setTo,\n  disableAccount\n}) => {\n  let [fromDate, setFromDate] = React.useState();\n\n  const fromValidator = date => {\n    if (isValidDate(date)) {\n      if (date < today) {\n        return 'From date must be today or later';\n      }\n    }\n\n    return '';\n  };\n\n  const toValidator = date => {\n    if (isValidDate(fromDate)) {\n      if (fromDate > date) {\n        setTo('');\n        return 'To date must be after from date';\n      }\n\n      const maxToDate = new Date(fromDate);\n      maxToDate.setFullYear(maxToDate.getFullYear() + 1);\n      if (date > maxToDate) {\n        setTo('');\n        return 'Access duration cannot be longer than one year';\n      }\n    }\n\n    return '';\n  };\n\n  const onFromChange = (str, date) => {\n    setFromDate(new Date(date));\n    setFrom(str);\n    if (isValidDate(date)) {\n      date.setDate(date.getDate() + 7);\n      setTo(yyyyMMddFormat(date));\n    }\n    else {\n      setTo('');\n    }\n  };\n\n  return (\n    <Form>\n      <Title headingLevel=\"h2\">Request details</Title>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <FormGroup label=\"First name\" labelIcon={getLabelIcon('first name')}>\n            <TextInput id=\"first-name\" value={user.first_name} isDisabled />\n          </FormGroup>\n        </SplitItem>\n        <SplitItem isFilled>\n          <FormGroup label=\"Last name\" labelIcon={getLabelIcon('last name')}>\n            <TextInput id=\"last-name\" value={user.last_name} isDisabled />\n          </FormGroup>\n        </SplitItem>\n      </Split>\n      <FormGroup label=\"Account ID\" isRequired labelIcon={getLabelIcon('account id')} helperText=\"Enter the account ID you would like access to\">\n        <TextInput\n          id=\"account-id\"\n          value={accountId}\n          onChange={val => setAccountId(val)}\n          isRequired\n          placeholder=\"865392\"\n          isDisabled={disableAccount}\n        />\n      </FormGroup>\n      <FormGroup label=\"Access duration\" isRequired labelIcon={getLabelIcon('access duration')}>\n        <Split>\n          <SplitItem>\n            <DatePicker\n              width=\"300px\"\n              aria-label=\"Start date\"\n              value={from}\n              onChange={onFromChange}\n              validators={[fromValidator]}\n            />\n          </SplitItem>\n          <SplitItem style={{ padding: '6px 12px 0 12px' }}>\n            to\n          </SplitItem>\n          <SplitItem>\n            <DatePicker\n              width=\"300px\"\n              aria-label=\"End date\"\n              value={to}\n              onChange={date => setTo(date)}\n              validators={[toValidator]}\n              rangeStart={from}\n            />\n          </SplitItem>\n        </Split>\n      </FormGroup>\n    </Form>\n  );\n};\n\n// Can't use CSS with @redhat-cloud-services/frontend-components-config because it's scoped to <main> content\n// rather than Modal content...\nconst spaceUnderStyle = { paddingBottom: '16px' };\n\nconst ReviewStep = ({ accountId, from, to, roles }) => (\n  <React.Fragment>\n    <Title headingLevel=\"h2\" style={spaceUnderStyle}>Review details</Title>\n    <table>\n      <tr>\n        <td style={spaceUnderStyle}><b>Account ID</b></td>\n        <td style={spaceUnderStyle}>{accountId}</td>\n      </tr>\n      <tr>\n        <td style={{ paddingRight: '32px' }}><b>Access duration</b></td>\n        <td></td>\n      </tr>\n      <tr>\n        <td>From</td>\n        <td>{from}</td>\n      </tr>\n      <tr>\n        <td style={spaceUnderStyle}>To</td>\n        <td style={spaceUnderStyle}>{to}</td>\n      </tr>\n      <tr>\n        <td><b>Roles</b></td>\n        <td>{roles[0].name}</td>\n      </tr>\n      {roles.splice(1).map(role =>\n        <tr key={role.uuid}>\n          <td></td>\n          <td>{role.name}</td>\n        </tr>\n      )}\n    </table>\n  </React.Fragment>\n);\n\nconst EditRequestModal = ({ row = [], variant, onClose }) => {\n  const [user, setUser] = React.useState();\n  const [accountId, setAccountId] = React.useState(row[1]);\n  const [from, setFrom] = React.useState(variant === 'renew' ? yyyyMMddFormat(new Date()) : row[2]);\n  const [to, setTo] = React.useState(variant === 'renew' ? undefined : row[3]);\n  const [roles, setRoles] = React.useState([]);\n\n  React.useEffect(() => {\n    window.insights.chrome.auth.getUser().then(user => {\n      if (user && user.identity && user.identity.user) {\n        setUser(user.identity.user);\n      }\n      else {\n        console.log('couldnt fetch user?', user);\n      }\n    }, err => console.error('couldnt fetch user', err));\n  }, []);\n\n  const step1Complete = [accountId, from, to].every(Boolean);\n  const step2Complete = roles.length > 0;\n\n  const steps = [\n    {\n      name: 'Request details',\n      component: <RequestDetailsForm\n        user={user}\n        accountId={accountId}\n        setAccountId={setAccountId}\n        from={from}\n        setFrom={setFrom}\n        to={to}\n        setTo={setTo}\n        disableAccount={variant === 'edit' || variant === 'renew'}\n      />,\n      enableNext: step1Complete\n    },\n    {\n      name: 'Select roles',\n      component: <MUARolesTable roles={roles} setRoles={setRoles} />,\n      enableNext: step2Complete,\n      canJumpTo: step1Complete\n    },\n    {\n      name: 'Review details',\n      component: <ReviewStep\n        accountId={accountId}\n        from={from}\n        to={to}\n        roles={roles}\n      />,\n      canJumpTo: step1Complete && step2Complete,\n      nextButtonText: 'Finish'\n    }\n  ];\n\n  const titleId = `${variant}-request`;\n  const descriptionId = `${variant} request`;\n  return (\n    <Modal\n      variant=\"large\"\n      style={{ height: '900px' }}\n      showClose={false}\n      hasNoBodyWrapper\n      isOpen\n      onClose={onClose}\n      aria-describedby={descriptionId}\n      aria-labelledby={titleId}\n    >\n      <Wizard\n        titleId={titleId}\n        descriptionId={descriptionId}\n        title={capitalize(variant) + ' request'}\n        steps={steps}\n        onClose={onClose}\n      />\n    </Modal>\n  );\n};\n\nEditRequestModal.displayName = 'EditRequestModal';\n\nexport default EditRequestModal;\n","import React from 'react';\nimport {\n  Label,\n  Toolbar,\n  ToolbarItem,\n  ToolbarContent,\n  Button,\n  InputGroup,\n  TextInput,\n  Pagination,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  Select,\n  SelectOption,\n  ChipGroup,\n  Chip\n} from '@patternfly/react-core';\nimport { TableComposable, Thead, Tbody, Tr, Th, Td } from '@patternfly/react-table';\nimport CancelRequestModal from '../CancelRequestModal';\nimport EditRequestModal from '../EditRequestModal';\nimport { capitalize } from '@patternfly/react-core/dist/esm/helpers/util';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport FilterIcon from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\nimport ErrorCircleOIcon from '@patternfly/react-icons/dist/js/icons/error-circle-o-icon';\nimport PendingIcon from '@patternfly/react-icons/dist/js/icons/in-progress-icon';\nimport ClockIcon from '@patternfly/react-icons/dist/js/icons/history-icon';\n\nconst statuses = [\n  'pending',\n  'approved',\n  'denied',\n  'cancelled',\n  'expired'\n];\nfunction getActions(row, setOpenModal) {\n  const status = row[5];\n  const items = [];\n  if (status === 'pending') {\n    items.push({\n      title: 'Edit',\n      onClick: () => setOpenModal({ type: 'edit', row })\n    });\n    items.push({\n      title: 'Cancel',\n      onClick: () => setOpenModal({ type: 'cancel', row })\n    });\n  }\n  else if (status === 'expired') {\n    items.push({\n      title: 'Renew',\n      onClick: () => setOpenModal({ type: 'renew', row })\n    });\n  }\n\n  return { items, disable: items.length === 0 };\n}\n\nfunction getLabelProps(status) {\n  let color = null;\n  let icon = null;\n  if (status === 'pending') {\n    color = 'blue';\n    icon = <PendingIcon />;\n  }\n  else if (status === 'approved') {\n    color = 'green';\n    icon = <CheckCircleIcon />;\n  }\n  else if (status === 'denied') {\n    color = 'red';\n    icon = <ExclamationCircleIcon />;\n  }\n  else if (status === 'cancelled') {\n    color = 'orange';\n    icon = <ErrorCircleOIcon />;\n  }\n  else if (status === 'expired') {\n    color = 'grey';\n    icon = <ClockIcon />;\n  }\n\n  return { color, icon };\n}\n\n// TODO: review with designer that this is GB format\nconst startEndDateFormat = new Intl.DateTimeFormat('en-GB', { dateStyle: 'medium' });\nconst createdDateFormat = new Intl.DateTimeFormat('en-GB', { dateStyle: 'medium', timeStyle: 'short', timeZone: 'UTC' });\n\nconst AccessRequestsTable = () => {\n  const columns = ['Request ID', 'Account ID', 'Start date', 'End date', 'Created', 'Status'];\n  const [rows] = React.useState([\n    ['0004', '84282', '2020-04-24', '2021-04-24', '2029-02-13T11:24:03.591Z', 'pending'],\n    ['0003', '87654', '2020-02-13', '2021-04-24', '2029-02-12T11:24:03.591Z', 'approved'],\n    ['0002', '114470', '2019-04-24', '2020-04-24', '2020-02-13T11:24:03.591Z', 'denied'],\n    ['0001', '169280', '2019-04-24', '2020-04-24', '2019-02-13T11:24:03.591Z', 'expired'],\n    ['0000', '169280', '2019-04-24', '2020-04-24', '2018-02-13T11:24:03.591Z', 'cancelled']\n  ]);\n  // Sorting\n  const [activeSortIndex, setActiveSortIndex] = React.useState(4);\n  const [activeSortDirection, setActiveSortDirection] = React.useState('desc');\n  const onSort = (_ev, index, direction) => {\n    setActiveSortIndex(index);\n    setActiveSortDirection(direction);\n  };\n\n  // Pagination\n  const [page, setPage] = React.useState(1);\n  const [perPage, setPerPage] = React.useState(10);\n  const AccessRequestsPagination = ({ id }) => (\n    <Pagination\n      itemCount={rows.length}\n      perPage={perPage}\n      page={page}\n      onSetPage={(_ev, pageNumber) => setPage(pageNumber)}\n      id={'access-requests-table-pagination-' + id}\n      variant={id}\n      onPerPageSelect={(_ev, perPage) => setPerPage(perPage)}\n    />\n  );\n\n  // Filtering\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n  const [filterColumn, setFilterColumn] = React.useState(columns[0]);\n  const [isSelectOpen, setIsSelectOpen] = React.useState(false);\n  const [statusSelections, setStatusSelections] = React.useState([]);\n  const selectLabelId = 'filter-status';\n  const selectPlaceholder = 'Filter by status';\n\n  // Modal actions\n  const [openModal, setOpenModal] = React.useState({ type: null });\n\n  return (\n    <React.Fragment>\n      <Toolbar id=\"access-requests-table-toolbar\">\n        <ToolbarContent>\n          <ToolbarItem>\n            <InputGroup>\n              <Dropdown\n                isOpen={isDropdownOpen}\n                onSelect={ev => { setIsDropdownOpen(false); setFilterColumn(ev.target.value); setIsSelectOpen(false); }}\n                toggle={\n                  <DropdownToggle onToggle={isOpen => setIsDropdownOpen(isOpen)}>\n                    <FilterIcon /> {filterColumn}\n                  </DropdownToggle>\n                }\n                dropdownItems={[0, 1, 5].map(i => columns[i]).map(colName =>\n                  // Filterable columns are RequestID, AccountID, and Status\n                  <DropdownItem key={colName} value={colName} component=\"button\">\n                    {capitalize(colName)}\n                  </DropdownItem>\n                )}\n              />\n              {filterColumn === 'Status' ?\n                <React.Fragment>\n                  <span id={selectLabelId} hidden>{selectPlaceholder}</span>\n                  <Select\n                    aria-labelledby={selectLabelId}\n                    variant=\"checkbox\"\n                    aria-label=\"Select statuses\"\n                    onToggle={isOpen => setIsSelectOpen(isOpen)}\n                    onSelect={(_ev, selection) => {\n                      if (statusSelections.includes(selection)) {\n                        setStatusSelections(statusSelections.filter(s => s !== selection));\n                      }\n                      else {\n                        setStatusSelections([...statusSelections, selection]);\n                      }\n                    }}\n                    isOpen={isSelectOpen}\n                    selections={Array.from(statusSelections)}\n                    isCheckboxSelectionBadgeHidden\n                    placeholderText={selectPlaceholder}\n                  >\n                    {statuses.map(status =>\n                      <SelectOption key={status} value={status}>{capitalize(status)}</SelectOption>\n                    )}\n                  </Select>\n                </React.Fragment>\n                :\n                <React.Fragment>\n                  <TextInput name=\"requestsSearch\" id=\"requestsSearch\" type=\"search\" aria-label=\"Search input\" />\n                  <Button variant=\"control\" aria-label=\"Search button for search input\">\n                    <SearchIcon />\n                  </Button>\n                </React.Fragment>\n              }\n            </InputGroup>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button variant=\"primary\" onClick={() => setOpenModal({ type: 'create' })}>Create request</Button>\n          </ToolbarItem>\n          <ToolbarItem variant=\"pagination\" align={{ default: 'alignRight' }}>\n            <AccessRequestsPagination id=\"top\" />\n          </ToolbarItem>\n        </ToolbarContent>\n        <ToolbarContent>\n          <ChipGroup categoryName=\"Status\">\n            {statusSelections.map(status =>\n              <Chip key={status} onClick={() => setStatusSelections(statusSelections.filter(s => s !== status))}>\n                {status}\n              </Chip>\n            )}\n          </ChipGroup>\n          {statusSelections.length > 0 && <Button variant=\"link\" onClick={() => setStatusSelections([])}>Clear filters</Button>}\n        </ToolbarContent>\n      </Toolbar>\n      <TableComposable\n        aria-label=\"Access requests table\"\n        variant=\"compact\"\n      >\n        <Thead>\n          <Tr>\n            {columns.map((column, columnIndex) => (\n              <Th key={columnIndex} sort={{ sortBy: { index: activeSortIndex, direction: activeSortDirection }, onSort, columnIndex }}>{column}</Th>\n            ))}\n            <Th />\n          </Tr>\n        </Thead>\n        <Tbody>\n          {rows\n          .filter(row => statusSelections.length > 0 ? statusSelections.includes(row[5]) : true)\n          .sort((a, b) => {\n            if (activeSortDirection === 'asc') {\n              return a[activeSortIndex].localeCompare(b[activeSortIndex]);\n            }\n\n            return b[activeSortIndex].localeCompare(a[activeSortIndex]);\n          })\n          .map((row, rowIndex) => (\n            <Tr key={rowIndex}>\n              <Td dataLabel={columns[0]}>\n                <a href={`/settings/rbac/access-requests/${row[0]}`}>{row[0]}</a>\n              </Td>\n              <Td dataLabel={columns[1]}>\n                {row[1]}\n              </Td>\n              <Td dataLabel={columns[2]}>\n                {startEndDateFormat.format(new Date(row[2]))}\n              </Td>\n              <Td dataLabel={columns[3]}>\n                {startEndDateFormat.format(new Date(row[3]))}\n              </Td>\n              <Td dataLabel={columns[4]}>\n                {createdDateFormat.format(new Date(row[4]))} UTC\n              </Td>\n              <Td dataLabel={columns[5]}>\n                <Label {...getLabelProps(row[5])} render={({ content, className }) =>\n                  <button className={className} onClick={() => setStatusSelections([...statusSelections.filter(s => s !== row[5]), row[5]])}>\n                    {content}\n                  </button>\n                }>\n                  {capitalize(row[5])}\n                </Label>\n              </Td>\n              {/* Different actions based on status */}\n              <Td actions={getActions(row, setOpenModal)} />\n            </Tr>\n          ))}\n        </Tbody>\n      </TableComposable>\n      <AccessRequestsPagination id=\"bottom\" />\n      {openModal.type === 'cancel' &&\n        <CancelRequestModal\n          requestId={openModal.row[0]}\n          onClose={() => setOpenModal({ type: null })}\n        />}\n      {['edit', 'renew', 'create'].includes(openModal.type) &&\n        <EditRequestModal\n          variant={openModal.type}\n          row={openModal.row}\n          onClose={() => setOpenModal({ type: null })}\n        />}\n    </React.Fragment>\n  );\n};\n\nAccessRequestsTable.displayName = 'AccessRequestsTable';\n\nexport default AccessRequestsTable;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PageSection, Title } from '@patternfly/react-core';\n\nimport AccessRequestsTable from '../../Components/AccessRequestsTable/AccessRequestsTable';\n\nconst AccessRequestsPage = () => {\n  return (\n    <React.Fragment>\n      <PageSection variant=\"light\">\n        <Title headingLevel=\"h1\" className=\"pf-u-pb-sm\">Access Requests</Title>\n        <p>Below is a list of all submitted requests for read only account access.</p>\n      </PageSection>\n      <PageSection variant=\"light\">\n        <AccessRequestsTable />\n      </PageSection>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(AccessRequestsPage);\n"],"sourceRoot":""}